
R version 3.2.0 (2015-04-16) -- "Full of Ingredients"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ######################################################################################
> # Master script Tilburg University Analyses                                          #
> # Responsible for this file: CHJ Hartgerink (c.h.j.hartgerink@tilburguniversity.edu) # 
> #                            RCM van Aert (r.c.m.vanaert@tilburguniversity.edu)      #
> #                            MALM van Assen (m.a.l.m.vanassen@tilburguniversity.edu) #
> ######################################################################################
> 
> setwd(choose.dir())
> # Read in Tilburg data
> MASTER <- read.csv('rpp_data.csv', sep = ";")[1:167, ]
> # source functions
> source('functions.r')
> library(Hmisc)
Loading required package: grid
Loading required package: lattice
Loading required package: survival
Loading required package: Formula
Loading required package: ggplot2

Attaching package: ‘Hmisc’

The following objects are masked from ‘package:base’:

    format.pval, round.POSIXt, trunc.POSIXt, units

Warning messages:
1: package ‘Hmisc’ was built under R version 3.2.1 
2: package ‘Formula’ was built under R version 3.2.1 
> library(metafor)
Error in library(metafor) : there is no package called ‘metafor’
> 
> # ALL ANALYSES INCLUDE PAIRWISE SELECTION.
> 
> #-----------------------------
> jour <- numeric()
> 
> for(i in 1:nrow(MASTER)) {
+   if(as.character(MASTER$Journal..O.[i]) == "JEPLMC") {
+     jour[i] <- 1
+   } else if(as.character(MASTER$Journal..O.[i]) == "JPSP") {
+     jour[i] <- 2
+   } else if(as.character(MASTER$Journal..O.[i]) == "PS") {
+     if(as.character(MASTER$Discipline..O.[i]) == "Cognitive") {
+       jour[i] <- 3
+     } else if(as.character(MASTER$Discipline..O.[i]) == "Social") {
+       jour[i] <- 4
+     } else { jour[i] <- 5 }
+   }
+   else { jour[i] <- NA }
+ }
> #-----------------------------
> 
> ########################
> # Preliminary analyses #
> ########################
> # Written by CHJ Hartgerink
> 
> #  Table S1
> tab <- table(MASTER$T_sign_O[!is.na(MASTER$T_sign_O) & !is.na(MASTER$T_sign_R)],
+              MASTER$T_sign_R[!is.na(MASTER$T_sign_O) & !is.na(MASTER$T_sign_R)])
> tab
   
     0  1
  0  2  1
  1 62 35
> 
> #######################################################################
> # Evaluating replication effect against null hypothesis of no effect. #
> #######################################################################
> # Written by CHJ Hartgerink
> 
> # Percent significant for original studies
> sum(tab[2,])/sum(tab)
[1] 0.97
> # Percent significant for replication studies
> sum(tab[,2])/sum(tab)
[1] 0.36
> 
> mcnemarchi <- (tab[1,2]-tab[2,1])^2/(tab[1,2]+tab[2,1])
> mcnemarp <- pchisq(q = mcnemarchi, df = 1, lower.tail = FALSE)
> mcnemarchi; mcnemarp
[1] 59.06349
[1] 1.526656e-14
> 
> # Significance per journal
> # Table significance, per journal
> # JEPLMC
> JEPLMCtab <- table(MASTER$T_sign_O[!is.na(MASTER$T_sign_O) & !is.na(MASTER$T_sign_R) & jour == 1],
+                    MASTER$T_sign_R[!is.na(MASTER$T_sign_O) & !is.na(MASTER$T_sign_R) & jour == 1])
> # JPSP
> JPSPtab <- table(MASTER$T_sign_O[!is.na(MASTER$T_sign_O) & !is.na(MASTER$T_sign_R) & jour == 2],
+                  MASTER$T_sign_R[!is.na(MASTER$T_sign_O) & !is.na(MASTER$T_sign_R) & jour == 2])
> # PS
> PStab <- table(MASTER$T_sign_O[!is.na(MASTER$T_sign_O) & !is.na(MASTER$T_sign_R) & (jour == 3 | jour == 4 | jour == 5)],
+                MASTER$T_sign_R[!is.na(MASTER$T_sign_O) & !is.na(MASTER$T_sign_R) & (jour == 3 | jour == 4 | jour == 5)])
> 
> labels <- c("Original", "Replication", "Replication | sig original")
> 
> JPSP <- c(sum(JPSPtab[2,]),
+           sum(JPSPtab[,2]),
+           sum(JPSPtab[2,2]))
> JPSPperc <- c(sum(JPSPtab[2,])/sum(JPSPtab),
+               sum(JPSPtab[,2])/sum(JPSPtab),
+               sum(JPSPtab[2,2])/sum(JPSPtab[2,]))
> 
> JEPLMC <- c(sum(JEPLMCtab[2,]),
+             sum(JEPLMCtab[,2]),
+             sum(JEPLMCtab[2,2]))
> JEPLMCperc <- c(sum(JEPLMCtab[2,])/sum(JEPLMCtab),
+                 sum(JEPLMCtab[,2])/sum(JEPLMCtab),
+                 sum(JEPLMCtab[2,2])/sum(JEPLMCtab[2,]))
> 
> PS <- c(sum(PStab[2,]),
+         sum(PStab[,2]),
+         sum(PStab[2,2]))
> PSperc <- c(sum(PStab[2,])/sum(PStab),
+             sum(PStab[,2])/sum(PStab),
+             sum(PStab[2,2])/sum(PStab[2,]))
> 
> 
> cbind(labels, JPSP, JPSPperc, JEPLMC, JEPLMCperc, PS, PSperc)
     labels                       JPSP JPSPperc            JEPLMC
[1,] "Original"                   "31" "0.96875"           "27"  
[2,] "Replication"                "7"  "0.21875"           "13"  
[3,] "Replication | sig original" "7"  "0.225806451612903" "13"  
     JEPLMCperc          PS   PSperc             
[1,] "0.964285714285714" "39" "0.975"            
[2,] "0.464285714285714" "16" "0.4"              
[3,] "0.481481481481481" "15" "0.384615384615385"
> 
> # Replication sig | original sig
> 35/97
[1] 0.3608247
> 
> # Deviation from uniformity in nonsignificant replication studies
> FisherMethod(x = MASTER$T_pval_USE..R.[!is.na(MASTER$T_pval_USE..R.)],
+              id = 1,
+              alpha = .05)
      Fish      PFish CountNSig CountSig PercentNonSig
1 155.8262 0.04765856        64       35     0.6464646
> 
> # Means p-value distributions
> mean(MASTER$T_pval_USE..O.[!is.na(MASTER$T_pval_USE..O.) & !is.na(MASTER$T_pval_USE..R.)])
[1] 0.02827804
> mean(MASTER$T_pval_USE..R.[!is.na(MASTER$T_pval_USE..O.) & !is.na(MASTER$T_pval_USE..R.)])
[1] 0.3021219
> 
> # Dependent t-test p-values
> t.test(x = MASTER$T_pval_USE..O.[!is.na(MASTER$T_pval_USE..O.) & !is.na(MASTER$T_pval_USE..R.)],
+        y = MASTER$T_pval_USE..R.[!is.na(MASTER$T_pval_USE..O.) & !is.na(MASTER$T_pval_USE..R.)],
+        paired = TRUE)

        Paired t-test

data:  MASTER$T_pval_USE..O.[!is.na(MASTER$T_pval_USE..O.) & !is.na(MASTER$T_pval_USE..R.)] and MASTER$T_pval_USE..R.[!is.na(MASTER$T_pval_USE..O.) & !is.na(MASTER$T_pval_USE..R.)]
t = -8.2068, df = 98, p-value = 9.166e-13
alternative hypothesis: true difference in means is not equal to 0
95 percent confidence interval:
 -0.3400612 -0.2076265
sample estimates:
mean of the differences 
             -0.2738438 

> 
> # Wilcoxon signed-rank test p-values
> wilcox.test(MASTER$T_pval_USE..O.[!is.na(MASTER$T_pval_USE..O.) & !is.na(MASTER$T_pval_USE..R.)],
+             MASTER$T_pval_USE..R.[!is.na(MASTER$T_pval_USE..O.) & !is.na(MASTER$T_pval_USE..R.)],
+             alternative="two.sided")

        Wilcoxon rank sum test with continuity correction

data:  MASTER$T_pval_USE..O.[!is.na(MASTER$T_pval_USE..O.) & !is.na(MASTER$T_pval_USE..R.)] and MASTER$T_pval_USE..R.[!is.na(MASTER$T_pval_USE..O.) & !is.na(MASTER$T_pval_USE..R.)]
W = 2438, p-value = 1.016e-09
alternative hypothesis: true location shift is not equal to 0

> 
> # Quantiles
> summary(MASTER$T_pval_USE..O.[!is.na(MASTER$T_pval_USE..O.) & !is.na(MASTER$T_pval_USE..R.)])[c(2, 3, 5)]
  1st Qu.    Median   3rd Qu. 
0.0004249 0.0068910 0.0233300 
> summary(MASTER$T_pval_USE..R.[!is.na(MASTER$T_pval_USE..O.) & !is.na(MASTER$T_pval_USE..R.)])[c(2, 3, 5)]
 1st Qu.   Median  3rd Qu. 
0.007475 0.198200 0.536500 
> 
> # Figure S1 (CDF PVAL)
> setEPS()
> postscript("figures/figure s1.eps", width = 7, height = 8) # change file name
> plot(ecdf(MASTER$T_pval_USE..O.[!is.na(MASTER$T_pval_USE..O.) & !is.na(MASTER$T_pval_USE..R.)]),
+      lty=1,
+      frame.plot=F, 
+      main="P-value distributions (CDF)",
+      xlim=c(0,1),
+      xaxs="i",
+      yaxs="i",
+      xlab="P-value",
+      ylab = "Density",
+      cex.axis=.6,
+      cex.lab=.7,
+      col = "grey")
> abline(v = .05, lty = 2)
> lines(ecdf(MASTER$T_pval_USE..R.[!is.na(MASTER$T_pval_USE..O.) & !is.na(MASTER$T_pval_USE..R.)]))
> legend(x=.5,y=.3,legend=c(paste('Original p-values, k = ',
+                                 length(MASTER$T_pval_USE..O.[!is.na(MASTER$T_pval_USE..O.) & !is.na(MASTER$T_pval_USE..R.)])),
+                           paste('Replication p-values, k = ',
+                                 length(MASTER$T_pval_USE..R.[!is.na(MASTER$T_pval_USE..O.) & !is.na(MASTER$T_pval_USE..R.)]))),
+        cex=1,
+        lty=c(1,1), bty = 'n',
+        col = c("grey","black"),box.lwd=0)
> dev.off()
null device 
          1 
> 
> # Figure S2 (PDF Pvalues)
> setEPS()
> postscript("figures/figure s2.eps", width = 7, height = 8) # change file name
> plot(density(MASTER$T_pval_USE..O.[!is.na(MASTER$T_pval_USE..O.) & !is.na(MASTER$T_pval_USE..R.)]),
+      lty=1,
+      frame.plot=F, 
+      main="P-value distributions (PDF)",
+      xlim=c(0,1),
+      xaxs="i",
+      yaxs="i",
+      xlab="P-value",
+      ylab = "Density",
+      cex.axis=.6,
+      cex.lab=.7,
+      col = "grey")
> abline(v = .05, lty = 2)
> lines(density(MASTER$T_pval_USE..R.[!is.na(MASTER$T_pval_USE..O.) & !is.na(MASTER$T_pval_USE..R.)]))
> legend(x=.4,y=7,legend=c(paste('Original p-values, k = ',
+                                length(MASTER$T_pval_USE..O.[!is.na(MASTER$T_pval_USE..O.) & !is.na(MASTER$T_pval_USE..R.)])),
+                          paste('Replication p-values, k = ',
+                                length(MASTER$T_pval_USE..R.[!is.na(MASTER$T_pval_USE..O.) & !is.na(MASTER$T_pval_USE..R.)]))),
+        cex=1,
+        lty=c(1,1), bty = 'n',
+        col = c("grey","black"),box.lwd=0)
> dev.off()
null device 
          1 
> 
> ####################################################
> # Comparing original and replication effect sizes. #
> ####################################################
> # Written by CHJ Hartgerink
> 
> # Number of pairs
> sum(!is.na(MASTER$T_r..O.) & !is.na(MASTER$T_r..R.))
[1] 97
> 
> # Descriptive original studies
> mean(MASTER$T_r..O.[!is.na(MASTER$T_r..O.) & !is.na(MASTER$T_r..R.)])
[1] 0.3962053
> sd(MASTER$T_r..O.[!is.na(MASTER$T_r..O.) & !is.na(MASTER$T_r..R.)])
[1] 0.1928085
> # Descriptive replication studies
> mean(MASTER$T_r..R.[!is.na(MASTER$T_r..O.) & !is.na(MASTER$T_r..R.)])
[1] 0.1969965
> sd(MASTER$T_r..R.[!is.na(MASTER$T_r..O.) & !is.na(MASTER$T_r..R.)])
[1] 0.2568707
> 
> # Dependent t-test effects (r values)
> t.test(x = MASTER$T_r..O.[!is.na(MASTER$T_r..O.) & !is.na(MASTER$T_r..R.)],
+        y = MASTER$T_r..R.[!is.na(MASTER$T_r..O.) & !is.na(MASTER$T_r..R.)],
+        paired = TRUE)

        Paired t-test

data:  MASTER$T_r..O.[!is.na(MASTER$T_r..O.) & !is.na(MASTER$T_r..R.)] and MASTER$T_r..R.[!is.na(MASTER$T_r..O.) & !is.na(MASTER$T_r..R.)]
t = 9.3574, df = 96, p-value = 3.575e-15
alternative hypothesis: true difference in means is not equal to 0
95 percent confidence interval:
 0.1569505 0.2414672
sample estimates:
mean of the differences 
              0.1992089 

> 
> # Wilcox test effects (r values)
> wilcox.test(MASTER$T_r..O.[!is.na(MASTER$T_r..O.) & !is.na(MASTER$T_r..R.)],
+             MASTER$T_r..R.[!is.na(MASTER$T_r..O.) & !is.na(MASTER$T_r..R.)],
+             alternative="two.sided")

        Wilcoxon rank sum test with continuity correction

data:  MASTER$T_r..O.[!is.na(MASTER$T_r..O.) & !is.na(MASTER$T_r..R.)] and MASTER$T_r..R.[!is.na(MASTER$T_r..O.) & !is.na(MASTER$T_r..R.)]
W = 7137, p-value = 4.983e-10
alternative hypothesis: true location shift is not equal to 0

> 
> # Binomial test to see if replicated effect is larger than original
> temp <- MASTER$T_O_larger
> prop <- sum(temp[!is.na(temp)])/length(temp[!is.na(temp)])
> binom.test(x = sum(temp[!is.na(temp)]), n = length(temp[!is.na(temp)]), 
+            p = .5, alternative = "two.sided")

        Exact binomial test

data:  sum(temp[!is.na(temp)]) and length(temp[!is.na(temp)])
number of successes = 82, number of trials = 99, p-value = 2.181e-11
alternative hypothesis: true probability of success is not equal to 0.5
95 percent confidence interval:
 0.7393611 0.8966667
sample estimates:
probability of success 
             0.8282828 

> 
> # Spearman correlation original and replicated effect sizes
> cor(MASTER$T_r..O.[!is.na(MASTER$T_r..O.) & !is.na(MASTER$T_r..R.)],
+     MASTER$T_r..R.[!is.na(MASTER$T_r..O.) & !is.na(MASTER$T_r..R.)],
+     method = "spearman")
[1] 0.5121651
> 
> setEPS()
> postscript("figures/figure s3.eps", width = 11, height = 7) # change file name
> # Histogram effects 
> par(mfrow=c(1,2))
> hist1 <- hist(MASTER$T_r..O.[!is.na(MASTER$T_r..O.) & !is.na(MASTER$T_r..R.)], breaks=15)
> hist2 <- hist(MASTER$T_r..R.[!is.na(MASTER$T_r..O.) & !is.na(MASTER$T_r..R.)], breaks=20)
> plot(hist1, xlim = c(-.6, 1.2), ylim = c(0, 50), xlab = "Effect size r",
+      main = "Effect histograms")
> plot(hist2, add = TRUE, col = "grey")
> legend(x = .4, y = 25,
+        leg=c(paste("Original, k = ",
+                    length(MASTER$T_r..O.[!is.na(MASTER$T_r..O.) & !is.na(MASTER$T_r..R.)])),
+              paste("Replication, k = ",
+                    length(MASTER$T_r..R.[!is.na(MASTER$T_r..O.) & !is.na(MASTER$T_r..R.)]))),
+        fill=c("white", "grey"),
+        bty = 'n')
> 
> # CDF effects
> plot(ecdf(MASTER$T_r..O.[!is.na(MASTER$T_r..O.) & !is.na(MASTER$T_r..R.)]),
+      lty=1,
+      frame.plot=F, 
+      main="Cumulative effect distributions",
+      xlim=c(0,1),
+      xaxs="i",
+      yaxs="i",
+      xlab="Correlation coefficient",
+      ylab = "Cumulative density",
+      cex.axis=.6,
+      cex.lab=.7,
+      col = "grey")
> lines(ecdf(MASTER$T_r..R.[!is.na(MASTER$T_r..O.) & !is.na(MASTER$T_r..R.)]))
> legend(x=.45,y=.5,legend=c(paste("Original, k = ",
+                                  length(MASTER$T_r..O.[!is.na(MASTER$T_r..O.) & !is.na(MASTER$T_r..R.)])),
+                            paste("Replication, k = ",
+                                  length(MASTER$T_r..R.[!is.na(MASTER$T_r..O.) & !is.na(MASTER$T_r..R.)]))),
+        cex=1,
+        lty=c(1,1), bty = 'n',
+        col = c("grey","black"),box.lwd=0)
> dev.off()
null device 
          1 
> 
> ##############################################################
> # Evaluating replication effect against original effect size #
> ##############################################################
> # Plot by CHJ Hartgerink
> 
> setEPS()
> postscript("figures/figure s4.eps", width = 7, height = 8) # change file name
> plot(y = MASTER$T_r..R., x = MASTER$T_r..O., xlab = "Effect size r (original)",
+      ylab = "Effect size r (replication)", col = "white", xlim = c(-.3, 1), ylim = c(-.3, 1),
+      frame.plot=F,
+      xaxs="i",
+      yaxs="i"
+ )
> abline(v=0, col = "grey")
> abline(h=0, col = "grey")
> points(y = MASTER$T_r..R.[MASTER$T_sign_O == 0 & MASTER$T_sign_R == 0],
+        x = MASTER$T_r..O.[MASTER$T_sign_O == 0 & MASTER$T_sign_R == 0], 
+        pch = 4, col = 1)
> points(y = MASTER$T_r..R.[MASTER$T_sign_O == 1 & MASTER$T_sign_R == 0],
+        x = MASTER$T_r..O.[MASTER$T_sign_O == 1 & MASTER$T_sign_R == 0],
+        pch = 21, col = 10)
> points(y = MASTER$T_r..R.[MASTER$T_sign_O == 1 & MASTER$T_sign_R == 1],
+        x = MASTER$T_r..O.[MASTER$T_sign_O == 1 & MASTER$T_sign_R == 1], 
+        pch = 10, col = 3)
> lines(x = seq(-.5, 2, .0001), y = seq(-.5, 2, .0001), type = 'l')
> 
> # Regression line
> x1 <- MASTER$T_r..O.[!is.na(MASTER$T_r..O.) & !is.na(MASTER$T_r..R.)]
> y1 <- MASTER$T_r..R.[!is.na(MASTER$T_r..O.) & !is.na(MASTER$T_r..R.)]
> 
> # Linear
> xx <- lm(y1 ~ x1)
> lines(loess.smooth(x = x1, y = y1), lty = 2)
> curve(expr = (xx$coefficients[1] + xx$coefficients[2] * x), from = min(x1),
+       to = max(x1), add = TRUE, col = "blue")
> 
> legend(x=-.2,y=.8,legend=c('Both nonsignificant',
+                            'Original significant',
+                            'Both significant',
+                            'Repl. predicted by orig.',
+                            'Loess curve'),
+        cex=1,
+        lty=c(0, 0, 0, 1, 2), bty = 'n', pch = c(4, 21, 10, NA, NA),
+        col = c("black", 10, 3, "blue", "black"), box.lwd=0)
> dev.off()
null device 
          1 
> 
> #----------------------
> 
> # Meta-analysis
> # Written by RCM van Aert
> 
> ##########################################
> ### Create correct order of categories ###
> ##########################################
> 
> ### Create the right order of the variable "Perceived expertise required"
> fac.expe <- factor(MASTER$Methodology.expertise.required..O., levels = c("No expertise required", "Slight expertise required",
+                                                                          "Moderate expertise required", "Strong expertise required", 
+                                                                          "Extreme expertise required"))
> 
> ### Create the right order of the variable "Opportunity for expectancy biases"
> fac.oppo.expe <- factor(MASTER$Opportunity.for.expectancy.bias..O., levels = c("No opportunity for researcher expectations to influence results",
+                                                                                "Slight opportunity for researcher expectations to influence results",
+                                                                                "Moderate opportunity for researcher expectations to influence results",
+                                                                                "Strong opportunity for researcher expectations to influence results",
+                                                                                "Extreme opportunity for researcher expectations to influence results"))
> 
> ### Create the right order of the variable "Opportunity for lack of diligence"
> fac.oppo.dili <- factor(MASTER$Opportunity.for.lack.of.diligence..O., levels = c("No opportunity for lack of diligence to affect the results",
+                                                                                  "Slight opportunity for lack of diligence to affect the results",
+                                                                                  "Moderate opportunity for lack of diligence to affect the results",
+                                                                                  "Strong opportunity for lack of diligence to affect the results",
+                                                                                  "Extreme opportunity for lack of diligence to affect the results"))
> 
> ### Create the right order of the variable "Current position"
> fac.posi <- factor(MASTER$Current.position..R., levels = c("Professor (or equivalent)", "Associate Professor (or equivalent)", "Assistant Professor (or equivalent)",
+                                                            "Post-doc or Research Scientist", "PhD student", "Master's student", "Undergraduate student", 
+                                                            "Faculty (non-tenure track) full-time lecturer", "Private sector researcher"))
> 
> ### Change "Faculty (non-tenure track) full-time lecturer" into "Assistant Professor (or equivalent)"
> tmp <- numeric()
> for(i in 1:length(fac.posi)) {
+   if(is.na(fac.posi[i] == TRUE)) { tmp[i] <- NA }
+   else if(as.character(fac.posi[i]) == "Faculty (non-tenure track) full-time lecturer") { tmp[i] <- "Assistant Professor (or equivalent)"
+   } else if (as.character(fac.posi[i]) == "Private sector researcher") { tmp[i] <- "Post-doc or Research Scientist"
+   } else { tmp[i] <- as.character(fac.posi[i]) }
+ }
> fac.posi <- as.factor(tmp)
> 
> ### Create the right order of the variable "Degree"
> fac.degr <- factor(MASTER$Degree..R., levels = c("PhD or equivalent", "Master's degree or equivalent", "Some graduate school", "Bachelor's degree or equivalent", "some college/university",
+                                                  "high school/equivalent"))
> 
> ### Create the right order of the variable "Domain expertise"
> fac.doma <- factor(MASTER$Domain.expertise..R., levels = c("No Expertise", "Slight Expertise", "Some Expertise", "Moderate Expertise", "High Expertise"))
> 
> ### Create the right order of the variable "Method expertise"
> fac.meth <- factor(MASTER$Method.expertise..R., levels = c("No Expertise", "Slight Expertise", "Some Expertise", "Moderate Expertise", "High Expertise"))
> 
> ### Create the right order of the variable "Implementation quality"
> fac.impl <- factor(MASTER$Implementation.quality..R., levels = c("was of much higher quality than the original study", "was of moderately higher quality than the original study",
+                                                                  "was of slightly higher quality than the original study", "was about the same quality as the original study", 
+                                                                  "was of slightly lower quality than the original study", "was of moderately lower quality than the original study"))
> 
> ### Create the right order of the variable "Data collection quality"
> fac.data <- factor(MASTER$Data.collection.quality..R., levels = c("was much better than the average study", "was better than the average study", "was slightly better than the average study",
+                                                                   "was about the same as the average study", "was slightly worse than the average study", "was worse than the average study",
+                                                                   "was much worse than the average study"))
> 
> ### Create the right order of the variable "Replication similarity"
> fac.repl <- factor(MASTER$Replication.similarity..R., levels = c("Not at all similar", "Slightly similar", "Somewhat similar", "Moderately similar", "Very similar", "Extremely similar",
+                                                                  "Virtually identical"))
> 
> ### Create the right order of the variable "Difficulty of implementation"
> fac.diff <- factor(MASTER$Difficulty.of.implimentation..R., levels = c("Extremely challenging", "Very challenging", "Moderately challenging", "Somewhat challenging", "Slightly challenging",
+                                                                        "Not at all challenging"))
> 
> ### Create the right order of the variable "Surprise of outcome (R)"
> fac.sur.out <- factor(MASTER$Surprise.of.outcome..R., levels = c("Results were exactly as anticipated", "Results were slightly surprising", "Results were somewhat surprising",
+                                                                  "Results were moderately surprising", "Results were extremely surprising"))
> 
> ###########################################
> ### Prepare variables for meta-analyses ###
> ###########################################
> 
> ### Function for standardizing variables
> stand <- function(x) {
+   res <- (x-mean(x, na.rm = TRUE))/sd(x, na.rm = TRUE)
+   return(res)
+ }
> 
> # a. PUBLISHING JOURNAL AND SUBDISCIPLINE
> 
> ### Create dummy variables for "Publishing journal and subdiscipline"
> ### JPSP is reference category because it has the most cases
> d.JEP <- ifelse(jour == 1, 1, 0)
> d.PSCog <- ifelse(jour == 3, 1, 0)
> d.PSSoc <- ifelse(jour == 4, 1, 0)
> 
> # b. IMPORTANCE OF THE EFFECT
> 
> ### Standardizing "Citation count, paper (O)"
> st.impa <- stand(MASTER$Citation.count..paper..O.)
> 
> ### Standardizing "Exciting/important effect"
> st.exci <- stand(as.numeric(levels(MASTER$Exciting.result..O.))[MASTER$Exciting.result..O.])
Warning message:
In stand(as.numeric(levels(MASTER$Exciting.result..O.))[MASTER$Exciting.result..O.]) :
  NAs introduced by coercion
> 
> ### Creating scale
> sc.impo <- (st.impa + st.exci)/2
> 
> # c. SURPRISING EFFECT
> 
> ### Standardizing "Surprising effect" and creating scale
> sc.surp <- stand(as.numeric(levels(MASTER$Surprising.result..O.))[MASTER$Surprising.result..O.])
Warning message:
In stand(as.numeric(levels(MASTER$Surprising.result..O.))[MASTER$Surprising.result..O.]) :
  NAs introduced by coercion
> 
> # d. EXPERIENCE AND EXPERTISE OF ORIGINAL TEAM
> 
> ### Taking the average and then standardizing "Institution prestige of 1st author and senior author" 
> ave.pres <- (MASTER$Institution.prestige..1st.author..O.+MASTER$Institution.prestige..senior.author..O.)/2
> st.pres <- stand(ave.pres)
> 
> ### Standardizing "Citation Count, 1st author (O)"
> st.impa.1st <- stand(MASTER$Citation.Count..1st.author..O.)
> 
> ### Standardizing "Citation count, senior author (O)"
> st.impa.sen <- stand(MASTER$Citation.count..senior.author..O.)
> 
> ### Creating scale
> sc.expe1 <- (st.pres + st.impa.1st + st.impa.sen)/3
> 
> # e. CHALLENGE OF CONDUCTING REPLICATION
> 
> ### Standardizing "Perceived expertise required"
> st.expe <- stand(as.numeric(fac.expe))
> 
> ### Standardizing "Perceived opportunity for expectancy biases"
> st.oppo.expe <- stand(as.numeric(fac.oppo.expe))
> 
> ### Standardizing "Perceived opportunity for impact of lack of diligence"
> st.oppo.dili <- stand(as.numeric(fac.oppo.dili))
> 
> ### Create scale
> sc.chal <- (st.expe + st.oppo.expe + st.oppo.dili)/3
> 
> # f. EXPERIENCE AND EXPERTISE OF REPLICATION TEAM
> 
> ### Standardizing "Position of senior member of replication team"
> st.posi <- stand(as.numeric(fac.posi))
> 
> ### Standardizing "Highest degree of replication team's senior member"
> st.degr <- stand(as.numeric(fac.degr))
> 
> ### Standardizing "Replication team domain expertise"
> st.doma <- stand(as.numeric(fac.doma))
> 
> ### Standardizing "Replication team method expertise"
> st.meth <- stand(as.numeric(fac.meth))
> 
> ### Standardizing "Replication team senior member's total publications"
> st.publ <- stand(MASTER$Total.publications..R.)
> 
> ### Standardizing "Replication team senior member's total publications and total number of peer-reviewed articles"
> st.peer <- stand(MASTER$Peer.reviewed.articles..R.)
> 
> ### Standardizing "Replication team senior member's total citations"
> st.cita <- stand(MASTER$Citations..R.)
> 
> ### Create scale
> sc.expe2 <- (st.posi + st.degr + st.doma + st.meth + st.publ + st.cita)/6
> 
> # g. SELF-ASSESSED QUALITY OF REPLICATION
> 
> ### Standardizing "Self-assessed quality of replication"
> st.impl <- stand(as.numeric(fac.impl))
> 
> ### Standardizing "Self-assessed data collection quality of replication"
> st.data <- stand(as.numeric(fac.data))
> 
> ### Standardizing "Self-assessed replication similarity to original"
> st.repl <- stand(as.numeric(fac.repl))
> 
> ### Standardizing "Self-assessed difficulty of implementation"
> st.diff <- stand(as.numeric(fac.diff))
> 
> ### Create a scale
> sc.self <- (st.impl + st.data + st.repl + st.diff)/4
> 
> ###########################################
> ### Transforming correlations to Fisher ###
> ###########################################
> 
> ri.o <- MASTER$T_r..O.
> ri.r <- MASTER$T_r..R.
> N.o <- MASTER$T_df2..O.+2
> N.r <- MASTER$T_df2..R.+2
> 
> ### Partial correlation, so degrees of freedom plus 2 in order to get N
> N.o[MASTER$ID == 82] <- MASTER$T_df1..O.[82]+2
> N.r[MASTER$ID == 82] <- MASTER$T_df1..R.[82]+2
> 
> ### Correlation
> N.o[MASTER$ID == 120] <- MASTER$T_N..O.[120]
> N.r[MASTER$ID == 120] <- MASTER$T_N..R.[120]
> N.o[MASTER$ID == 154] <- MASTER$T_N..O.[154]
> N.r[MASTER$ID == 154] <- MASTER$T_N..R.[154]
> N.o[MASTER$ID == 155] <- MASTER$T_N..O.[155]
> N.r[MASTER$ID == 155] <- MASTER$T_N..R.[155]
> 
> ### t
> N.o[MASTER$ID == 121] <- MASTER$T_N..O.[121]
> N.r[MASTER$ID == 121] <- MASTER$T_N..R.[121]
> 
> ### Transform to Fisher's z
> fis.o <- 0.5*log((1 + ri.o) / (1 - ri.o)) 
Warning message:
In log((1 + ri.o)/(1 - ri.o)) : NaNs produced
> fis.r <- 0.5*log((1 + ri.r) / (1 - ri.r))
> 
> ### Difference in Fisher's z scores
> yi <- numeric()
> for(i in 1:length(fis.o)) {
+   
+   if(is.na(fis.o[i]) == TRUE | is.na(fis.r[i]) == TRUE) { yi[i] <- NA }
+   else if(fis.o[i] < 0 & fis.r[i] < 0) { yi[i] <- fis.o[i]*-1-fis.r[i]*-1 } 
+   else if(fis.o[i] < 0 & fis.r[i] > 0) { yi[i] <- fis.o[i]*-1+fis.r[i] }
+   else {  yi[i] <- fis.o[i]-fis.r[i] }
+   
+ }
> 
> ### Standard errors original and replication study
> sei.o <- sqrt(1/(N.o-3))
> sei.r <- sqrt(1/(N.r-3))
> 
> ### p-values original and replication study
> pval.o <- pnorm(fis.o, sd = sei.o, lower.tail = FALSE)
> pval.r <- pnorm(fis.r, sd = sei.r, lower.tail = FALSE)
> 
> ### Standard error of difference score
> sei <- sqrt(1/(N.o-3) + 1/(N.r-3))
> 
> #######################################
> ### Coverage F(>1,df2) and Chi2     ###
> #######################################
> # Written by MALM van Assen
> 
> tol <- 1e-7
> xm <- 0
> 
> df1.or <- df2.or <- F.or <- df1.rep <- df2.rep <- F.rep <- 1:18
> ncp.L <- ncp.U <- ncp.o <- in.ci <- 1:18
> 
> ### study 12
> df1.or[1] <- 2
> df2.or[1] <- 92
> F.or[1] <- 3.13
> df1.rep[1] <- 2
> df2.rep[1] <- 232
> F.rep[1] <- 1.63
> 
> ### study 13
> df1.or[2] <- 2
> df2.or[2] <- 68
> F.or[2] <- 41.59
> df1.rep[2] <- 2
> df2.rep[2] <- 68
> F.rep[2] <- 41.603
> 
> ### study 17
> df1.or[3] <- 2
> df2.or[3] <- 76
> F.or[3] <- 8.67
> df1.rep[3] <- 1.58
> df2.rep[3] <- 72.4
> F.rep[3] <- 19.48
> 
> ### study 22
> df1.or[4] <- 3
> df2.or[4] <- 93
> F.or[4] <- 5.23
> df1.rep[4] <- 2.33
> df2.rep[4] <- 90
> F.rep[4] <- 0.38
> 
> ### study 43
> df1.or[5] <- 2
> df2.or[5] <- 64
> F.or[5] <- 10.17
> df1.rep[5] <- 2
> df2.rep[5] <- 72
> F.rep[5] <- 1.97
> 
> ### study 46
> df1.or[6] <- 21
> df2.or[6] <- 230025
> F.or[6] <- 118.15
> df1.rep[6] <- 21
> df2.rep[6] <- 455304
> F.rep[6] <- 261.93
> 
> ### study 50
> df1.or[7] <- 2
> df2.or[7] <- 92
> F.or[7] <- 4.36
> df1.rep[7] <- 2
> df2.rep[7] <- 103
> F.rep[7] <- 2.601
> 
> ### study 55
> df1.or[8] <- 2
> df2.or[8] <- 54
> F.or[8] <- 3.19
> df1.rep[8] <- 2
> df2.rep[8] <- 68
> F.rep[8] <- 0.3
> 
> ### study 64
> df1.or[9] <- 2
> df2.or[9] <- 76
> F.or[9] <- 21.57
> df1.rep[9] <- 2
> df2.rep[9] <- 65
> F.rep[9] <- 0.865
> 
> ### study 80
> df1.or[10] <- 2
> df2.or[10] <- 43
> F.or[10] <- 3.36
> df1.rep[10] <- 2
> df2.rep[10] <- 67
> F.rep[10] <- 1.7
> 
> ### study 86
> df1.or[11] <- 2
> df2.or[11] <- 82
> F.or[11] <- 4.05
> df1.rep[11] <- 2
> df2.rep[11] <- 137
> F.rep[11] <- 1.99
> 
> ### study 117
> df1.or[12] <- 18
> df2.or[12] <- 660
> F.or[12] <- 16.31
> df1.rep[12] <- 18
> df2.rep[12] <- 660
> F.rep[12] <- 12.98
> 
> ### study 132
> df1.or[13] <- 3
> df2.or[13] <- 69
> F.or[13] <- 5.15
> df1.rep[13] <- 1.48
> df2.rep[13] <- 41.458
> F.rep[13] <- 1.401
> 
> ### study 139
> df1.or[14] <- 3
> df2.or[14] <- 9
> F.or[14] <- 8.5
> df1.rep[14] <- 3
> df2.rep[14] <- 12
> F.rep[14] <- 13.06
> 
> ### study 140
> df1.or[15] <- 2
> df2.or[15] <- 81
> F.or[15] <- 4.97
> df1.rep[15] <- 2
> df2.rep[15] <- 122
> F.rep[15] <- 0.24
> 
> ### study 142
> df1.or[16] <- 2
> df2.or[16] <- 162
> F.or[16] <- 192.89
> df1.rep[16] <- 2
> df2.rep[16] <- 174
> F.rep[16] <- 252.83
> 
> ### study 143
> df1.or[17] <- 4
> df2.or[17] <- 108
> F.or[17] <- 3.67
> df1.rep[17] <- 4
> df2.rep[17] <- 150
> F.rep[17] <- 0.58
> 
> ### Added later, after reviews, before re-submitting to Science [July 16, 2015]
> ### study 25
> df1.or[18] <- 3
> df2.or[18] <- 48
> F.or[18] <- 9.14
> df1.rep[18] <- 3
> df2.rep[18] <- 59
> F.rep[18] <- 5.681
> 
> ### loop
> for (i in 1:length(F.or)) {
+   df1.o <- df1.or[i]
+   df2.o <- df2.or[i]
+   F.o <- F.or[i]
+   df1.r <- df1.rep[i]
+   df2.r <- df2.rep[i]
+   F.r <- F.rep[i]
+   
+   ### ncp lower bound
+   if (pf(F.r,df1.r,df2.r,0) < .975)
+   {ncp.L[i] <- 0} else
+   {
+     x0 <- 0
+     x1 <- df1.r*F.r
+     ym <- 1  
+     while(abs(ym-0.975) > tol) {
+       xm <- (x0+x1)/2
+       ym <- pf(F.r,df1.r,df2.r,xm)
+       if (ym > 0.975) x0 <- xm
+       if (ym < 0.975) x1 <- xm  
+     }
+     ncp.L[i] <- xm
+   }
+   
+   ### ncp upper bound
+   x0 <- df1.r*F.r
+   x1 <- 20*df1.r*F.r
+   ym <- 1  
+   while(abs(ym-0.025) > tol) {
+     xm <- (x0+x1)/2
+     ym <- pf(F.r,df1.r,df2.r,xm)
+     if (ym > 0.025) x0 <- xm
+     if (ym < 0.025) x1 <- xm
+   }
+   ncp.U[i] <- xm
+   
+   ### check if original is in ci of replication
+   ncp.o[i] <- F.o*df1.o*(df2.o-2)/df2.o-df1.o
+   in.ci[i] <- ( (ncp.L[i] < ncp.o[i]) & (ncp.U[i] > ncp.o[i]) )
+ }
> 
> cbind(ncp.L,ncp.o,ncp.U,in.ci)
            ncp.L       ncp.o       ncp.U in.ci
 [1,]    0.000000    4.123913   12.758816     1
 [2,]   42.841438   78.733529  133.180218     1
 [3,]   10.915164   14.883684   58.464870     1
 [4,]    0.000000   12.352581    5.930017     0
 [5,]    0.000000   17.704375   14.306912     0
 [6,] 5193.053774 2460.128427 5775.726990     0
 [7,]    0.000000    6.530435   16.782363     1
 [8,]    0.000000    4.143704    5.417638     1
 [9,]    0.000000   40.004737    9.169053     0
[10,]    0.000000    4.407442   13.164520     1
[11,]    0.000000    5.902439   14.310414     1
[12,]  157.092071  274.690364  285.021484     1
[13,]    0.000000   12.002174   10.925111     0
[14,]    7.617370   16.833333   85.580237     1
[15,]    0.000000    7.694568    4.825572     0
[16,]  375.564583  379.017284  651.320274     1
[17,]    0.000000   10.408148    7.456598     0
[18,]    2.619328   23.277500   36.160676     1
> sum(in.ci)
[1] 11
> mean(in.ci)
[1] 0.6111111
> 
> ### ch2
> ## if probability calculated with pchisq is between .025
> ## and .975 then the ncp of original is in ci of replication
> 
> ## Study 73
> chi2.o <- 3.85
> chi2.r <- 4.8
> pchisq(chi2.r,1,chi2.o-1)
[1] 0.6923585
> 
> ## Study 84
> chi2.o <- 13.18
> chi2.r <- 7.1
> pchisq(chi2.r,1,chi2.o-1)
[1] 0.2045714
> 
> ## Study 104
> chi2.o <- 3.83
> chi2.r <- 0.387
> pchisq(chi2.r,1,chi2.o-1)
[1] 0.1339329
> 
> ## Study 165
> chi2.o <- 4.51
> chi2.r <- 1.57
> pchisq(chi2.r,1,chi2.o-1)
[1] 0.2665788
> 
> (sum(in.ci)+4)/(length(in.ci)+4) # Original study within CI of replication
[1] 0.6818182
> 
> #######################################
> ### Select studies for the analyses ###
> #######################################
> 
> # Written by RCM van Aert
> 
> df <- data.frame(ID = MASTER$ID, stat = as.character(MASTER$T_Test.Statistic..R.), df1 = MASTER$T_df1..O., yi, sei, fis.o, sei.o, N.o, pval.o, fis.r, sei.r, N.r, pval.r, 
+                  d.JEP, d.PSCog, d.PSSoc, sc.impo, sc.surp, sc.expe1, sc.chal, sc.expe2, sc.self, power.r = as.numeric(levels(MASTER$Power..R.))[MASTER$Power..R.],
+                  N.o.tab = MASTER$T_N_O_for_tables, N.r.tab = MASTER$T_N_R_for_tables, replic = as.character(MASTER$Replicate..R.))
Warning message:
In data.frame(ID = MASTER$ID, stat = as.character(MASTER$T_Test.Statistic..R.),  :
  NAs introduced by coercion
> 
> ### Select: F(df1 = 1, df2), t, and r
> sub <- subset(df, (df$stat == "F" & df$df1 == 1) | df$stat == "t" | df$stat == "r")
> 
> ### Remove rows when NA on yi
> final <- sub[!is.na(sub$yi) & !is.na(sub$sei), ]
> 
> ################################################################################################
> ### Table 1 Brian / "Combining original and replication effect sizes for cumulative evidence ###
> ################################################################################################
> 
> ### Meta-analytic mean and sd of the estimate combining per pair the original study and replication 
> est <- pval <- numeric()
> 
> for(i in 1:length(final$fis.o)) {
+   tmp <- rma(yi = c(final$fis.o[i], final$fis.r[i]), sei = c(final$sei.o[i], final$sei.r[i]), method = "FE")
+   est[i] <- tmp$b[1]
+   if (tmp$pval < 0.05) { pval[i] <- TRUE
+   } else { pval[i] <- FALSE }
+ }
Error: could not find function "rma"
> 
> ### Transforming Fisher z values into raw correlations
> cor <- (exp(2*est)-1)/(exp(2*est)+1)
> 
> mean(cor)
[1] NaN
> sd(cor)
[1] NA
> sum(pval)
[1] 0
> sum(pval)/(length(pval)+2) # Proportion of statistically significant studies plus two because of two non-significant p-values for odds rations (ID = 84 and 165)
[1] 0
> 
> ### Per discipline
> mean(cor[final$d.JEP == 0 & final$d.PSSoc == 0 & final$d.PSCog == 0])
[1] NA
> mean(cor[final$d.JEP == 1])
[1] NA
> mean(cor[final$d.PSSoc == 1])
[1] NA
> mean(cor[final$d.PSCog == 1])
[1] NA
> 
> sd(cor[final$d.JEP == 0 & final$d.PSSoc == 0 & final$d.PSCog == 0])
[1] NA
> sd(cor[final$d.JEP == 1])
[1] NA
> sd(cor[final$d.PSSoc == 1])
[1] NA
> sd(cor[final$d.PSCog == 1])
[1] NA
> 
> sum(pval[final$d.JEP == 0 & final$d.PSSoc == 0 & final$d.PSCog == 0])/(length(pval[final$d.JEP == 0 # Plus one because of one odds ratio (ID = 84)
+                                                                                    & final$d.PSSoc == 0 & final$d.PSCog == 0])+1)
[1] NA
> sum(pval[final$d.JEP == 1])/length(pval[final$d.JEP == 1])
[1] NA
> sum(pval[final$d.PSSoc == 1])/(length(pval[final$d.PSSoc == 1])+1) # Plus one because of one odds ratio (ID = 165)
[1] NA
> sum(pval[final$d.PSCog == 1])/length(pval[final$d.PSCog == 1])
[1] NA
> 
> ### Subset of data with all cases which were replicated
> tmp <- subset(df, is.na(MASTER$T_N_O_for_tables) == FALSE)
> mean(tmp$power.r, na.rm = TRUE)
[1] 0.9216495
> 
> ### Subset of data with all cases published in JPSP
> tmp.JPSP <- subset(tmp, tmp$d.JEP == 0 & tmp$d.PSSoc == 0 & tmp$d.PSCog == 0)
> mean(tmp.JPSP$power.r, na.rm = TRUE)
[1] 0.9071875
> 
> ### Subset of data with all cases published in JEP
> tmp.JEP <- subset(tmp, tmp$d.JEP == 1)
> mean(tmp.JEP$power.r, na.rm = TRUE)
[1] 0.9333333
> 
> ### Subset of data with all cases published in PSSoc
> tmp.PSSoc <- subset(tmp, tmp$d.PSSoc == 1)
> mean(tmp.PSSoc$power.r, na.rm = TRUE)
[1] 0.9154167
> 
> ### Subset of data with all cases published in PSCog
> tmp.PSCog <- subset(tmp, tmp$d.PSCog == 1)
> mean(tmp.PSCog$power.r, na.rm = TRUE)
[1] 0.9428571
> 
> ### Subset of data with complete data on effect size
> tmp <- subset(df, is.na(MASTER$T_r..R.) == FALSE)
> summary(tmp$N.o.tab)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
      7      30      54    2454      94  230000 
> summary(tmp$N.r.tab)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
      7      31      68    4850     150  455300 
> 
> ### Subset of complete data JPSP
> tmp.JPSP <- subset(tmp, tmp$d.JEP == 0 & tmp$d.PSSoc == 0 & tmp$d.PSCog == 0)
> summary(tmp.JPSP$N.o.tab)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
     26      47      73    8018      99  230000 
> summary(tmp.JPSP$N.r.tab)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
     26      68     120   15860     176  455300 
> 
> ### Subset of complete data JEP
> tmp.JEP <- subset(tmp, tmp$d.JEP == 1)
> summary(tmp.JEP$N.o.tab)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
   7.00   23.75   36.50   56.21   92.25  190.00 
> summary(tmp.JEP$N.r.tab)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  14.00   28.75   43.00   71.51   90.00  268.00 
> 
> ### Subset of complete data PSSoc
> tmp.PSSoc <- subset(tmp, tmp$d.PSSoc == 1)
> summary(tmp.PSSoc$N.o.tab)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
   11.0    38.0    76.0   112.1   124.0   562.0 
> summary(tmp.PSSoc$N.r.tab)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
     13      51     122     290     174    3511 
> 
> ### Subset of complete data PSCog
> tmp.PSCog <- subset(tmp, tmp$d.PSCog == 1)
> summary(tmp.PSCog$N.o.tab)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
   7.00   11.00   23.00   74.87   39.00  660.00 
> summary(tmp.PSCog$N.r.tab)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
   7.00   11.50   21.00   77.87   44.50  660.00 
> 
> ### % subjective "yes" to "Did it replicate?"
> tmp <- subset(df, is.na(MASTER$T_N_O_for_tables) == FALSE) # Subset of data with all cases which were replicated
> sum(tmp$replic == "yes")/length(tmp$replic)
[1] 0.39
> sum(tmp$replic[tmp$d.JEP == 0 & tmp$d.PSSoc == 0 & tmp$d.PSCog == 0] == "yes")/length(tmp$replic[tmp$d.JEP == 0 & tmp$d.PSSoc == 0 & tmp$d.PSCog == 0])
[1] 0.25
> sum(tmp$replic[tmp$d.JEP == 1] == "yes")/length(tmp$replic[tmp$d.JEP == 1])
[1] 0.5357143
> sum(tmp$replic[tmp$d.PSSoc == 1] == "yes")/length(tmp$replic[tmp$d.PSSoc == 1])
[1] 0.32
> sum(tmp$replic[tmp$d.PSCog == 1] == "yes")/length(tmp$replic[tmp$d.PSCog == 1])
[1] 0.5333333
> 
> ### "original effect size within replication 95% CI"
> ### How often is original study within CI of replication
> ### Create confidence interval for replications
> ci.lb <- fis.r-qnorm(.975)*sei.r
> ci.ub <- fis.r+qnorm(.975)*sei.r
> 
> tmp <- in.ci <- rep(NA, length(ci.lb))
> 
> for(i in 1:length(fis.r)) {
+   
+   if (is.na(fis.o[i]) == TRUE) {
+     tmp[i] <- NA
+   } else if (any(is.na(c(ci.lb[i], ci.ub[i])) == TRUE)) {
+     tmp[i] <- NA
+   } else if (fis.o[i] > ci.lb[i] & fis.o[i] < ci.ub[i]) {
+     tmp[i] <- TRUE
+   } else { tmp[i] <- FALSE }
+   
+ }
> 
> ### Select only studies with test statistic t or F and df1 = 1
> dat <- data.frame(ID = MASTER$ID, stat = as.character(MASTER$T_Test.Statistic..O.), df1 = MASTER$T_df1..O., tmp)
> sub <- subset(dat, (dat$stat == "F" & dat$df1 == 1) | dat$stat == "t" | dat$stat == "r")
> in.ci[sub$ID] <- sub$tmp
> 
> ### Store results for other statistics
> in.ci[c(22,43,46,64,132,140,143)] <- FALSE
> in.ci[c(12,13,17,50,55,80,86,117,139,142,73,84,104,165)] <- TRUE
> 
> noNA <- in.ci[is.na(in.ci) == FALSE] # Remove NAs
> sum(noNA)/length(noNA) # How often original study is within CI of replication
[1] 0.4736842
> 
> # How often original study is within CI of replication: per journal and discipline
> sum(in.ci[df$d.JEP == 0 & df$d.PSSoc == 0 & df$d.PSCog == 0], na.rm = TRUE)/sum(is.na(in.ci[df$d.JEP == 0 & df$d.PSSoc == 0 & df$d.PSCog == 0]) == FALSE)
[1] 0.3448276
> sum(in.ci[df$d.JEP == 1], na.rm = TRUE)/sum(is.na(in.ci[df$d.JEP == 1]) == FALSE)
[1] 0.6153846
> sum(in.ci[df$d.PSSoc == 1], na.rm = TRUE)/sum(is.na(in.ci[df$d.PSSoc == 1]) == FALSE)
[1] 0.4
> sum(in.ci[df$d.PSCog == 1], na.rm = TRUE)/sum(is.na(in.ci[df$d.PSCog == 1]) == FALSE)
[1] 0.6
> 
> ### Two meta-analyses per pair for odds ratios
> ### Study 84
> logodds1 <- log((63*70)/(48*55))
> var1 <- 1/63 + 1/55 + 1/48 + 1/70
> logodds2 <- log((231*350)/(213*352))
> var2 <- 1/231 + 1/352 + 1/213 + 1/350
> 
> rma(yi = c(logodds1, logodds2), vi = c(var1, var2), method = "FE")
Error: could not find function "rma"
> 
> # study 165
> logodds1 <- log((15*21)/(12*8))
> var1 <- 1/15 + 1/21 + 1/12 + 1/8
> logodds2 <- log((11*10)/(14*16))
> var2 <- 1/11 + 1/10 + 1/14 + 1/16
> 
> rma(yi = c(logodds1, logodds2), vi = c(var1, var2), method = "FE")
Error: could not find function "rma"
> 
> #########################################################################################
> ### Meta-analyses of difference of effect size between original and replication study ###
> #########################################################################################
> 
> ### Meta-analysis of null model
> res <- rma(yi = final$yi, sei = final$sei, method = "REML")
Error: could not find function "rma"
> res
Error: object 'res' not found
> 
> setEPS()
> postscript("figures/figure s7.eps", width = 7, height = 8) # change file name
> funnel(res, main = "Funnel plot based on difference original and replication study")
Error: could not find function "funnel"
> dev.off()
null device 
          1 
> 
> ### Meta-analysis with a. PUBLISHING JOURNAL AND SUBDISCIPLINE as moderator (JPSP is reference category)
> rma(yi = final$yi, sei = final$sei, mods = ~ final$d.JEP + final$d.PSCog + final$d.PSSoc, method = "REML")
Error: could not find function "rma"
> 
> ### Meta-analysis with sei.o as moderator
> rma(yi = final$yi, sei = final$sei, mods = ~ final$sei.o, method = "REML")
Error: could not find function "rma"
> 
> ### Meta-analysis with sei.o as moderator with "ML" as estimator for tau2 (model comparison)
> res0 <- rma(yi = final$yi, sei = final$sei, mods = ~ final$sei.o, method = "ML")
Error: could not find function "rma"
> res0
Error: object 'res0' not found
> 
> ### Meta-analysis with a. PUBLISHING JOURNAL AND SUBDISCIPLINE and sei.o as moderators (JPSP is reference category)
> rma(yi = final$yi, sei = final$sei, mods = ~ final$d.JEP + final$d.PSCog + final$d.PSSoc + final$sei.o, method = "REML")
Error: could not find function "rma"
> 
> ### Meta-analysis with a. PUBLISHING JOURNAL AND SUBDISCIPLINE and sei.o as moderators (JPSP is reference category) with "ML" as estimator for tau2 (model comparison)
> res1 <- rma(yi = final$yi, sei = final$sei, mods = ~ final$d.JEP + final$d.PSCog + final$d.PSSoc + final$sei.o, method = "ML")
Error: could not find function "rma"
> res1
Error: object 'res1' not found
> 
> ### Comparing models with and without discipline
> anova(res0, res1)
Error in anova(res0, res1) : object 'res0' not found
> 
> ### Meta-analysis with b. IMPORTANCE OF THE EFFECT as moderator
> rma(yi = final$yi, sei = final$sei, mods = ~ final$sc.impo, method = "REML")
Error: could not find function "rma"
> 
> ### Meta-analysis with c. SURPRISING EFFECT as moderator
> rma(yi = final$yi, sei = final$sei, mods = ~ final$sc.surp, method = "REML")
Error: could not find function "rma"
> 
> ### Meta-analysis with d. EXPERIENCE AND EXPERTISE OF ORIGINAL TEAM as moderator
> rma(yi = final$yi, sei = final$sei, mods = ~ final$sc.expe1, method = "REML")
Error: could not find function "rma"
> 
> ### Meta-analysis with e. CHALLENGE OF CONDUCTING REPLICATION as moderator
> rma(yi = final$yi, sei = final$sei, mods = ~ final$sc.chal, method = "REML")
Error: could not find function "rma"
> 
> ### Meta-analysis with f. EXPERIENCE AND EXPERTISE OF REPLICATION TEAM
> rma(yi = final$yi, sei = final$sei, mods = ~ final$sc.expe2, method = "REML")
Error: could not find function "rma"
> 
> ### Meta-analysis with g. SELF-ASSESSED QUALITY OF REPLICATION
> rma(yi = final$yi, sei = final$sei, mods = ~ final$sc.self, method = "REML")
Error: could not find function "rma"
> 
> #########################################################################################
> ### Meta-analyses of all original study effects, and of all replication study effects ###
> #########################################################################################
> 
> ### Meta-analysis of null model
> res <- rma(yi = final$fis.o, sei = final$sei.o, method = "REML")
Error: could not find function "rma"
> res
Error: object 'res' not found
> 
> setEPS()
> postscript("figures/figure s5.eps", width = 7, height = 8) # change file name
> funnel(res, main = "Funnel plot based on original studies")
Error: could not find function "funnel"
> dev.off()
null device 
          1 
> 
> ### Meta-analysis with se in original study as moderator
> rma(yi = final$fis.o, sei = final$sei.o, mods = ~ final$sei.o, method = "REML")
Error: could not find function "rma"
> 
> ### Meta-analysis with se in original study as moderator with "ML" as estimator for tau2 (model comparison)
> res0 <- rma(yi = final$fis.o, sei = final$sei.o, mods = ~ final$sei.o, method = "ML")
Error: could not find function "rma"
> res0
Error: object 'res0' not found
> 
> ### Meta-analysis with se in original study and dummy variables for journal and discipline (JPSP is reference category)
> rma(yi = final$fis.o, sei = final$sei.o, mods = ~ final$sei.o + final$d.JEP + final$d.PSCog + final$d.PSSoc, method = "REML")
Error: could not find function "rma"
> 
> ### Meta-analysis with se in original study and dummy variables for journal and discipline (JPSP is reference category) with "ML" as estimator for tau2 (model comparison)
> res1 <- rma(yi = final$fis.o, sei = final$sei.o, mods = ~ final$sei.o + final$d.JEP + final$d.PSCog + final$d.PSSoc, method = "ML")
Error: could not find function "rma"
> res1
Error: object 'res1' not found
> 
> ### Comparing models with and without discipline
> anova(res0, res1)
Error in anova(res0, res1) : object 'res0' not found
> 
> ### Meta-analysis with dummy variables for journal and discipline (JPSP is reference category)
> rma(yi = final$fis.o, sei = final$sei.o, mods = ~ final$d.JEP + final$d.PSCog + final$d.PSSoc, method = "REML")
Error: could not find function "rma"
> 
> ### Meta-analysis with se in original study, dummy variables for journal and discipline (JPSP is reference category), and its interactions as moderators
> rma(yi = final$fis.o, sei = final$sei.o, mods = ~ final$sei.o + final$d.JEP + final$d.PSCog + final$d.PSSoc + final$sei.o*final$d.JEP + final$sei.o*final$d.PSSoc, method = "REML")
Error: could not find function "rma"
> 
> ### Meta-analyses based on only replication studies
> ### Meta-analysis of null model
> res <- rma(yi = final$fis.r, sei = final$sei.r, method = "REML")
Error: could not find function "rma"
> res
Error: object 'res' not found
> 
> setEPS()
> postscript("figures/figure s6.eps", width = 7, height = 8) # change file name
> funnel(res, main = "Funnel plot based on replication studies")
Error: could not find function "funnel"
> dev.off()
null device 
          1 
> 
> ### Meta-analysis with se in replication study as moderator
> rma(yi = final$fis.r, sei = final$sei.r, mods = ~ final$sei.r, method = "REML")
Error: could not find function "rma"
> 
> ### Meta-analysis with se in replication study as moderator with "ML" as estimator for tau2 (model comparison)
> res0 <- rma(yi = final$fis.r, sei = final$sei.r, mods = ~ final$sei.r, method = "ML")
Error: could not find function "rma"
> res0
Error: object 'res0' not found
> 
> ### Meta-analysis with se in replication study and dummy variables for journal and discipline (JPSP is reference category)
> rma(yi = final$fis.r, sei = final$sei.r, mods = ~ final$sei.r + final$d.JEP + final$d.PSCog + final$d.PSSoc, method = "REML")
Error: could not find function "rma"
> 
> ### Meta-analysis with se in replication study and dummy variables for journal and discipline (JPSP is reference category) with "ML" as estimator for tau2 (model comparison)
> res1 <- rma(yi = final$fis.r, sei = final$sei.r, mods = ~ final$sei.r + final$d.JEP + final$d.PSCog + final$d.PSSoc, method = "ML")
Error: could not find function "rma"
> res1
Error: object 'res1' not found
> 
> ### Comparing models with and without discipline
> anova(res0, res1)
Error in anova(res0, res1) : object 'res0' not found
> 
> ### Meta-analysis with se in replication study and dummy variables for journal and discipline (JPSP is reference category)
> rma(yi = final$fis.r, sei = final$sei.r, mods = ~ final$sei.r + final$d.JEP + final$d.PSCog + final$d.PSSoc, method = "REML")
Error: could not find function "rma"
> 
> ### Meta-analysis with dummy variables for journal and discipline (JPSP is reference category)
> rma(yi = final$fis.r, sei = final$sei.r, mods = ~ final$d.JEP + final$d.PSCog + final$d.PSSoc, method = "REML")
Error: could not find function "rma"
> 
> ### Meta-analysis with se in replication study, dummy variables for journal and discipline (JPSP is reference category), and its interactions as moderators
> rma(yi = final$fis.r, sei = final$sei.r, mods = ~ final$sei.r + final$d.JEP + final$d.PSCog + final$d.PSSoc + final$sei.r*final$d.JEP + final$sei.r*final$d.PSSoc, method = "REML")
Error: could not find function "rma"
> 
> ##############################
> ### Meta-analyses per pair ###
> ##############################
> 
> ### How often is the null hypotheses rejected in the meta-analysis
> in.ci <- es.meta <- se.meta <- ci.lb.meta <- ci.ub.meta <- pval.meta <- numeric()
> 
> for(i in 1:length(final$fis.o)) {
+   tmp <- rma(yi = c(final$fis.o[i], final$fis.r[i]), sei = c(final$sei.o[i], final$sei.r[i]), method = "FE")
+   es.meta[i] <- tmp$b[1]
+   se.meta[i] <- tmp$se
+   ci.lb.meta[i] <- tmp$ci.lb
+   ci.ub.meta[i] <- tmp$ci.ub
+   pval.meta[i] <- tmp$pval
+   
+   if(tmp$pval < 0.05) { in.ci[i] <- 1
+   } else { in.ci[i] <- 0 }
+ }
Error: could not find function "rma"
> 
> sum(in.ci)/length(in.ci) # Proportion of times the null hypothesis of no effect is rejected
[1] NaN
> 
> ### Create data frame
> tab <- data.frame(ID = final$ID, fis.o = final$fis.o, sei.o = final$sei.o, pval.o = final$pval.o, fis.r = final$fis.r, sei.r = final$sei.r, 
+                   pval.r = final$pval.r, diff = final$yi, es.meta = es.meta, se.meta = se.meta, ci.lb.meta = ci.lb.meta, ci.ub.meta = ci.ub.meta, pval.meta = pval.meta)
Error in data.frame(ID = final$ID, fis.o = final$fis.o, sei.o = final$sei.o,  : 
  arguments imply differing number of rows: 73, 0
> round(tab, 3)
   
     0  1
  0  2  1
  1 62 35
> 
> ### Check how often effect size original study is within CI of meta-analysis
> in.ci.meta <- numeric()
> 
> for(i in 1:length(final$fis.o)) {
+   
+   if(final$fis.o[i] > ci.lb.meta[i] & final$fis.o[i] < ci.ub.meta[i]) {
+     in.ci.meta[i] <- TRUE
+   } else { in.ci.meta[i] <- FALSE }
+   
+ }
Error in if (final$fis.o[i] > ci.lb.meta[i] & final$fis.o[i] < ci.ub.meta[i]) { : 
  missing value where TRUE/FALSE needed
> 
> sum(in.ci.meta)/length(in.ci.meta) # Proportion of times the original study is within the CI of meta-analysis
[1] NaN
> 
> ######################################################################################
> ### Predicting how often effect size of original study is within CI of replication ###
> ######################################################################################
> 
> ### Predicting how often effect size of original study is within CI of replication
> overlap <- numeric()
> points <- 1000000
> p <- 1:points/(points+1)
> 
> for (i in 1:length(final$N.r)) {
+   zu <- qnorm(p,0,1/sqrt(final$N.r[i]-3)) + qnorm(.975)/sqrt(final$N.r[i]-3)
+   zl <- zu - 2*qnorm(.975)/sqrt(final$N.r[i]-3)
+   overlap[i] <- mean(pnorm(zu,0,1/sqrt(final$N.o[i]-3))) - mean(pnorm(zl,0,1/sqrt(final$N.o[i]-3)))
+ }
> overlap
 [1] 0.7230489 0.8342246 0.8033464 0.7929864 0.7818304 0.7976371 0.9344699
 [8] 0.8522521 0.8303252 0.7941837 0.6996958 0.8787363 0.8208099 0.9130317
[15] 0.8365067 0.7193794 0.6749298 0.7292801 0.8312130 0.8342246 0.8342246
[22] 0.7758322 0.6949578 0.7344564 0.7000259 0.8508379 0.7121914 0.9050646
[29] 0.7820982 0.7385099 0.7306008 0.6582552 0.7484706 0.8942939 0.8383796
[36] 0.7823072 0.8342246 0.8427805 0.8342246 0.8540522 0.7179258 0.3265906
[43] 0.8005429 0.7529083 0.8894029 0.7320969 0.8342246 0.7928042 0.8342246
[50] 0.9224120 0.8551690 0.7916176 0.7914959 0.7051984 0.7397986 0.8461565
[57] 0.7038225 0.7726095 0.7387346 0.5331224 0.7392696 0.8944217 0.8593898
[64] 0.8002104 0.7738995 0.7926131 0.6684134 0.8342246 0.9271337 0.7960785
[71] 0.7061323 0.8342246 0.8086667
> mean(overlap)
[1] 0.7855265
> 
> #######################################
> ### Correlations between moderators ###
> #######################################
> 
> ### Create variable with meta-analysis estimate with NAs
> es.meta.all <- vector(length = nrow(df))
> s <- 1
> for(i in 1:max(final$ID)) {
+   if (i == final$ID[s]) {
+     es.meta.all[i] <- es.meta[s]
+     s <- s + 1
+   } else {
+     es.meta.all[i] <- NA
+   }
+ }
> 
> ### Create matrix for correlation table
> mat <- cbind(df$fis.o, df$fis.r, df$yi, es.meta.all, df$sc.imp, df$sc.surp, df$sc.expe1, df$sc.chal, df$sc.expe2, df$sc.self)
> colnames(mat) <- c("fis.o", "fis.r", "diff", "es.meta", "importance", "surprising", "experience.O", "challenge", "experience.R", "quality")
> 
> ### Subset of only the replicated studies
> mat <- subset(mat, is.na(df$fis.r) == FALSE)
> 
> ### Create table with correlations
> rcorr(mat, type = "spearman")
             fis.o fis.r  diff es.meta importance surprising experience.O
fis.o         1.00  0.51  0.28      NA      -0.05      -0.09        -0.08
fis.r         0.51  1.00 -0.59      NA      -0.13      -0.16        -0.08
diff          0.28 -0.59  1.00      NA       0.04       0.10        -0.03
es.meta         NA    NA    NA       1         NA         NA           NA
importance   -0.05 -0.13  0.04      NA       1.00       0.35         0.34
surprising   -0.09 -0.16  0.10      NA       0.35       1.00         0.07
experience.O -0.08 -0.08 -0.03      NA       0.34       0.07         1.00
challenge    -0.19 -0.25  0.09      NA       0.17       0.15         0.11
experience.R  0.16  0.04  0.13      NA      -0.01       0.10        -0.11
quality      -0.08 -0.03  0.02      NA       0.17       0.04         0.24
             challenge experience.R quality
fis.o            -0.19         0.16   -0.08
fis.r            -0.25         0.04   -0.03
diff              0.09         0.13    0.02
es.meta             NA           NA      NA
importance        0.17        -0.01    0.17
surprising        0.15         0.10    0.04
experience.O      0.11        -0.11    0.24
challenge         1.00         0.06    0.12
experience.R      0.06         1.00   -0.09
quality           0.12        -0.09    1.00

n
             fis.o fis.r diff es.meta importance surprising experience.O
fis.o           97    97   97       0         97         97           97
fis.r           97    97   97       0         97         97           97
diff            97    97   97       0         97         97           97
es.meta          0     0    0       0          0          0            0
importance      97    97   97       0         97         97           97
surprising      97    97   97       0         97         97           97
experience.O    97    97   97       0         97         97           97
challenge       97    97   97       0         97         97           97
experience.R    96    96   96       0         96         96           96
quality         97    97   97       0         97         97           97
             challenge experience.R quality
fis.o               97           96      97
fis.r               97           96      97
diff                97           96      97
es.meta              0            0       0
importance          97           96      97
surprising          97           96      97
experience.O        97           96      97
challenge           97           96      97
experience.R        96           96      96
quality             97           96      97

P
             fis.o  fis.r  diff   es.meta importance surprising experience.O
fis.o               0.0000 0.0056         0.6049     0.3707     0.4256      
fis.r        0.0000        0.0000         0.2151     0.1192     0.4117      
diff         0.0056 0.0000                0.7124     0.3213     0.7515      
es.meta                                                                     
importance   0.6049 0.2151 0.7124                    0.0004     0.0006      
surprising   0.3707 0.1192 0.3213         0.0004                0.5036      
experience.O 0.4256 0.4117 0.7515         0.0006     0.5036                 
challenge    0.0600 0.0145 0.4061         0.0924     0.1344     0.2935      
experience.R 0.1314 0.7323 0.1955         0.9472     0.3389     0.2763      
quality      0.4232 0.7711 0.8691         0.1002     0.6841     0.0188      
             challenge experience.R quality
fis.o        0.0600    0.1314       0.4232 
fis.r        0.0145    0.7323       0.7711 
diff         0.4061    0.1955       0.8691 
es.meta                                    
importance   0.0924    0.9472       0.1002 
surprising   0.1344    0.3389       0.6841 
experience.O 0.2935    0.2763       0.0188 
challenge              0.5685       0.2607 
experience.R 0.5685                 0.4007 
quality      0.2607    0.4007              
Warning message:
In sqrt(npair - 2) : NaNs produced
> 
> ###########
> # TABLE 1 #
> # https://docs.google.com/spreadsheets/d/16aqIekNerZcflSJwM7dOiXnN24-KvZqaa3eTg4js41U/edit#gid=0
> ###########
> 
> # Overall 
> sel <- MASTER[!is.na(MASTER$T_sign_O) & !is.na(MASTER$T_sign_R) & MASTER$T_sign_O == 1, ]
> 
> # Column B
> # Relations tested
> reltest <- dim(sel)[1]
> # Relations both significant
> relsig <- sum((sel$T_sign_O) & (sel$T_sign_R), na.rm = TRUE)
> cat(
+   paste0("Column B Overall ",
+          round(relsig, 0),
+          " / ",
+          round(reltest, 0)
+   )
+ )
Column B Overall 35 / 97> 
> # Column C
> # Percent
> cat(paste0("Column C overall ", round((relsig / reltest), 2)))
Column C overall 0.36> 
> # Column D
> # Mean
> temp1 <- mean(sel$T_r..O., na.rm = TRUE)
> # SD
> temp2 <- sd(sel$T_r..O., na.rm = TRUE)
> 
> cat(paste0("Column D overall ", round(temp1, 3), " (", round(temp2, 3), ")"))
Column D overall 0.403 (0.188)> 
> # Column F
> # Mean
> temp1 <- mean(sel$T_r..R., na.rm = TRUE)
> # SD
> temp2 <- sd(sel$T_r..R., na.rm = TRUE)
> 
> cat(paste0("Column F overall ", round(temp1, 3), " (", round(temp2, 3), ")"))
Column F overall 0.2 (0.26)> 
> 
> # Per journal 
> journals <- c("JEPLMC", "JPSP", "PS Cognitive", "PS social", "PS other")
> for(journal in c(2,1,4,3,5)){
+   
+   sel <- MASTER[!is.na(MASTER$T_sign_O) & !is.na(MASTER$T_sign_R) & MASTER$T_sign_O == 1 & jour == journal,]
+   
+   # Column B
+   # Relations tested
+   reltest <- dim(sel)[1]
+   # Relations both significant
+   relsig <- sum((sel$T_sign_O) & (sel$T_sign_R), na.rm = TRUE)
+   cat(
+     paste0("Column B ", journals[journal], " ",
+            round(relsig, 0),
+            " / ",
+            round(reltest, 0)
+     )
+   )
+   cat("\n")
+   
+   # Column C
+   # Percent
+   cat(paste0("Column C ", journals[journal], " ",
+              as.character(round((relsig / reltest), 2))))
+   cat("\n")
+   
+   # Column D
+   # Mean
+   temp1 <- mean(sel$T_r..O., na.rm = TRUE)
+   # SD
+   temp2 <- sd(sel$T_r..O., na.rm = TRUE)
+   
+   cat(paste0("Column D ", journals[journal], " ",
+              round(temp1, 2), " (", round(temp2, 2), ")"))
+   cat("\n")
+   # Column F
+   # Mean
+   temp1 <- mean(sel$T_r..R., na.rm = TRUE)
+   # SD
+   temp2 <- sd(sel$T_r..R., na.rm = TRUE)
+   
+   cat(paste0("Column F ", journals[journal], " ",round(temp1, 2), " (", round(temp2, 2), ")"))
+   cat("\n")
+ }
Column B JPSP 7 / 31
Column C JPSP 0.23
Column D JPSP 0.29 (0.1)
Column F JPSP 0.07 (0.11)
Column B JEPLMC 13 / 27
Column C JEPLMC 0.48
Column D JEPLMC 0.47 (0.18)
Column F JEPLMC 0.27 (0.24)
Column B PS social 7 / 24
Column C PS social 0.29
Column D PS social 0.39 (0.2)
Column F PS social 0.21 (0.3)
Column B PS Cognitive 8 / 15
Column C PS Cognitive 0.53
Column D PS Cognitive 0.53 (0.2)
Column F PS Cognitive 0.29 (0.35)
Column B PS other 0 / 0
Column C PS other NaN
Column D PS other NaN (NA)
Column F PS other NaN (NA)
> 
> #########################
> ##### TABLE 2 BRIAN #####
> #########################
> 
> # Notes:
> # p-value = recalculated p-value
> # effect size = correlation coefficient because we use Spearman's rank correlation transformation is not required
> # T_pval_USE..R is used to create a subset of replicated studies
> 
> ### Variables in the columns
> rows <- cbind(MASTER$T_pval_USE..O., MASTER$T_r..O., MASTER$T_N_O_for_tables, df$sc.impo, df$sc.surp, df$sc.expe1, MASTER$T_pval_USE..R, MASTER$T_r..R., df$power.r, 
+               MASTER$T_N_R_for_tables, df$sc.chal, df$sc.expe2, df$sc.self, MASTER$T_pval_USE..R)
> colnames(rows) <- c("p-value", "Original Effect size", "Original sample size", "Importance of effect", "Surprising effect", "Experience and expertise of team O", "Replication p-value",
+                     "Replication Effect size", "Power", "Replication Sample size", "Challenge of conducting replication", "Experience and expertise of team R", "Self-assessed quality of replication", "sub")
> 
> ### "Replications p < 0.05 in original direction (all signicant replication studies are in the same direction as the original study)"
> rep.dir <- ifelse(MASTER$T_sign_O == 0, yes = NA, no = MASTER$T_sign_R)
> mat <- cbind(rep.dir, rows)
> colnames(mat) <- c("rep.dir", "p-value", "Original Effect size", "Original sample size", "Importance of effect", "Surprising effect", "Experience and expertise of team O", "Replication p-value",
+                    "Replication Effect size", "Power", "Replication Sample size", "Challenge of conducting replication", "Experience and expertise of team R", "Self-assessed quality of replication", "sub")
> 
> sub <- subset(mat, is.na(mat[ , "sub"]) == FALSE, select = -ncol(mat)) # Select only the replicated studies
> 
> round(rcorr(sub, type = "spearman")$r[-1,1], 3) # Create table with correlations and select the appropriate rows
                             p-value                 Original Effect size 
                              -0.327                                0.304 
                Original sample size                 Importance of effect 
                              -0.150                               -0.105 
                   Surprising effect   Experience and expertise of team O 
                              -0.244                               -0.072 
                 Replication p-value              Replication Effect size 
                              -0.828                                0.731 
                               Power              Replication Sample size 
                               0.368                               -0.085 
 Challenge of conducting replication   Experience and expertise of team R 
                              -0.219                               -0.096 
Self-assessed quality of replication 
                              -0.069 
> 
> ### "Effect size difference" (Fisher z)
> es.dif <- df$fis.o - df$fis.r
> 
> mat <- cbind(es.dif, rows)
> colnames(mat) <- c("Effect size Difference", "p-value", "Original Effect size", "Original sample size", "Importance of effect", "Surprising effect", "Experience and expertise of team O", "Replication p-value",
+                    "Replication Effect size", "Power", "Replication Sample size", "Challenge of conducting replication", "Experience and expertise of team R", "Self-assessed quality of replication", "sub")
> sub <- subset(mat, is.na(mat[ , "sub"]) == FALSE, select = -ncol(mat)) # Select only the replicated studies
> 
> round(rcorr(sub, type = "spearman")$r[-1,1], 3) # Create table with correlations and select the appropriate rows
                             p-value                 Original Effect size 
                              -0.057                                0.279 
                Original sample size                 Importance of effect 
                              -0.194                                0.038 
                   Surprising effect   Experience and expertise of team O 
                               0.102                               -0.033 
                 Replication p-value              Replication Effect size 
                               0.621                               -0.586 
                               Power              Replication Sample size 
                              -0.053                               -0.224 
 Challenge of conducting replication   Experience and expertise of team R 
                               0.085                                0.133 
Self-assessed quality of replication 
                               0.017 
> 
> ### "Meta-analytic estimate" (Fisher z)
> mat <- cbind(es.meta.all, rows)
> colnames(mat) <- c("Meta-analytic estimate", "p-value", "Original Effect size", "Original sample size", "Importance of effect", "Surprising effect", "Experience and expertise of team O", "Replication p-value",
+                    "Replication Effect size", "Power", "Replication Sample size", "Challenge of conducting replication", "Experience and expertise of team R", "Self-assessed quality of replication", "sub")
> sub <- subset(mat, is.na(mat[ , "sub"]) == FALSE, select = -ncol(mat)) # Select only the replicated studies
> 
> round(rcorr(sub, type = "spearman")$r[-1,1], 3) # Create table with correlations and select the appropriate rows
                             p-value                 Original Effect size 
                                  NA                                   NA 
                Original sample size                 Importance of effect 
                                  NA                                   NA 
                   Surprising effect   Experience and expertise of team O 
                                  NA                                   NA 
                 Replication p-value              Replication Effect size 
                                  NA                                   NA 
                               Power              Replication Sample size 
                                  NA                                   NA 
 Challenge of conducting replication   Experience and expertise of team R 
                                  NA                                   NA 
Self-assessed quality of replication 
                                  NA 
Warning message:
In sqrt(npair - 2) : NaNs produced
> 
> ### "original effect size within replication 95% CI"
> ### How often is original study within CI of replication
> ### Create confidence interval for replications
> ci.lb <- fis.r-qnorm(.975)*sei.r
> ci.ub <- fis.r+qnorm(.975)*sei.r
> 
> tmp <- in.ci <- rep(NA, length(ci.lb))
> 
> for(i in 1:length(fis.r)) {
+   
+   if (is.na(fis.o[i]) == TRUE) {
+     tmp[i] <- NA
+   } else if (any(is.na(c(ci.lb[i], ci.ub[i])) == TRUE)) {
+     tmp[i] <- NA
+   } else if (fis.o[i] > ci.lb[i] & fis.o[i] < ci.ub[i]) {
+     tmp[i] <- TRUE
+   } else { tmp[i] <- FALSE }
+   
+ }
> 
> ### Select only studies with test statistic t or F and df1 = 1
> dat <- data.frame(ID = MASTER$ID, stat = as.character(MASTER$T_Test.Statistic..R.), df1 = MASTER$T_df1..R., tmp)
> sub <- subset(dat, (dat$stat == "F" & dat$df1 == 1) | dat$stat == "t" | dat$stat == "r")
> in.ci[sub$ID] <- sub$tmp
> 
> sum(in.ci, na.rm = TRUE) # Number of times the replication study contained the effect size of the original study of the studies were the se could be computed
[1] 30
> 
> ### Store results for other statistics
> in.ci[c(22,43,46,64,132,140,143)] <- FALSE
> in.ci[c(12,13,17,50,55,80,86,117,139,142,73,84,104,165)] <- TRUE
> 
> mat <- cbind(in.ci, rows)
> colnames(mat) <- c("Original in CI", "p-value", "Original Effect size", "Original sample size", "Importance of effect", "Surprising effect", "Experience and expertise of team O", "Replication p-value",
+                    "Replication Effect size", "Power", "Replication Sample size", "Challenge of conducting replication", "Experience and expertise of team R", "Self-assessed quality of replication", "sub")
> 
> sub <- subset(mat, is.na(mat[ , "sub"]) == FALSE, select = -ncol(mat)) # Select only the replicated studies
> 
> round(rcorr(sub, type = "spearman")$r[-1,1], 3) # Create table with correlations and select the appropriate rows
                             p-value                 Original Effect size 
                               0.032                                0.121 
                Original sample size                 Importance of effect 
                              -0.221                               -0.133 
                   Surprising effect   Experience and expertise of team O 
                              -0.113                               -0.103 
                 Replication p-value              Replication Effect size 
                              -0.562                                0.611 
                               Power              Replication Sample size 
                              -0.056                               -0.257 
 Challenge of conducting replication   Experience and expertise of team R 
                              -0.109                               -0.053 
Self-assessed quality of replication 
                              -0.088 
> 
> ### "subjective 'yes' to 'Did it replicate?'"
> replic <- vector(mode = "logical", length = length(levels(MASTER$Replicate..R.)[MASTER$Replicate..R.]))
> for (i in 1:length(levels(MASTER$Replicate..R.)[MASTER$Replicate..R.])) {
+   if (levels(MASTER$Replicate..R.)[MASTER$Replicate..R.][i] == "yes") { replic[i] <- 1
+   } else { replic[i] <- 0 }
+ }
> 
> mat <- cbind(replic, rows)
> colnames(mat) <- c("Did it replicate?", "p-value", "Original Effect size", "Original sample size", "Importance of effect", "Surprising effect", "Experience and expertise of team O", "Replication p-value",
+                    "Replication Effect size", "Power", "Replication Sample size", "Challenge of conducting replication", "Experience and expertise of team R", "Self-assessed quality of replication", "sub")
> sub <- subset(mat, is.na(mat[ , "sub"]) == FALSE, select = -ncol(mat)) # Select only the replicated studies
> 
> round(rcorr(sub, type = "spearman")$r[-1,1], 3) # Create table with correlations and select the appropriate rows
                             p-value                 Original Effect size 
                              -0.260                                0.277 
                Original sample size                 Importance of effect 
                              -0.185                               -0.074 
                   Surprising effect   Experience and expertise of team O 
                              -0.241                               -0.044 
                 Replication p-value              Replication Effect size 
                              -0.738                                0.710 
                               Power              Replication Sample size 
                               0.285                               -0.164 
 Challenge of conducting replication   Experience and expertise of team R 
                              -0.151                               -0.068 
Self-assessed quality of replication 
                              -0.055 
> 
> ##########################
> ##### TABLE S2 BRIAN #####
> ##########################
> 
> mat <- cbind(rep.dir, es.dif, es.meta.all, in.ci, replic, MASTER$T_pval_USE..R)
> colnames(mat) <- c("rep.dir", "Effect Size Difference", "Meta-analytic estimate", "Original in CI", "Did it replicate?", "sub")
> 
> sub <- subset(mat, is.na(mat[ , "sub"]) == FALSE, select = -ncol(mat)) # Select only the replicated studies
> 
> rcorr(sub, type = "spearman")$r # Create table with correlations
                          rep.dir Effect Size Difference Meta-analytic estimate
rep.dir                 1.0000000             -0.6189402                     NA
Effect Size Difference -0.6189402              1.0000000                     NA
Meta-analytic estimate         NA                     NA                      1
Original in CI          0.5438291             -0.4942272                     NA
Did it replicate?       0.9560222             -0.5768331                     NA
                       Original in CI Did it replicate?
rep.dir                     0.5438291         0.9560222
Effect Size Difference     -0.4942272        -0.5768331
Meta-analytic estimate             NA                NA
Original in CI              1.0000000         0.6005354
Did it replicate?           0.6005354         1.0000000
Warning message:
In sqrt(npair - 2) : NaNs produced
> 
> ##########################
> ##### TABLE S4 BRIAN #####
> ##########################
> 
> ### Create data frame
> dat <- data.frame(Original.effect.size = MASTER$T_r..O., Original.pvalue = MASTER$T_pval_USE..O., Original.sample.size = MASTER$T_N_O_for_tables, 
+                   Inst.1st.author = MASTER$Institution.prestige..1st.author..O., Inst.sen.author = MASTER$Institution.prestige..senior.author..O.,
+                   Cit.1st.author = MASTER$Citation.Count..1st.author..O., Cit.sen.author = MASTER$Citation.count..senior.author..O.,
+                   Cit.impact = MASTER$Citation.count..paper..O., concep.repl = MASTER$Internal.conceptual.replications..O.,
+                   dir.repl = MASTER$Internal.direct.replications..O., expe.req = as.numeric(fac.expe), oppo.expec.bias = as.numeric(fac.oppo.expe),
+                   oppo.dili = as.numeric(fac.oppo.dili), surp.res = as.numeric(levels(MASTER$Surprising.result..O.))[MASTER$Surprising.result..O.],
+                   exci.res = as.numeric(levels(MASTER$Exciting.result..O.))[MASTER$Exciting.result..O.], sub = MASTER$T_pval_USE..R.)
Warning messages:
1: In data.frame(Original.effect.size = MASTER$T_r..O., Original.pvalue = MASTER$T_pval_USE..O.,  :
  NAs introduced by coercion
2: In data.frame(Original.effect.size = MASTER$T_r..O., Original.pvalue = MASTER$T_pval_USE..O.,  :
  NAs introduced by coercion
> 
> sub <- subset(dat, is.na(dat$sub) == FALSE, select = -ncol(dat)) # Select only the replicated studies
> 
> ### Descriptives
> summary(sub)
 Original.effect.size Original.pvalue     Original.sample.size Inst.1st.author
 Min.   :0.00464      Min.   :0.0000000   Min.   :     7.0     Min.   :1.280  
 1st Qu.:0.22444      1st Qu.:0.0004249   1st Qu.:    30.5     1st Qu.:2.585  
 Median :0.37328      Median :0.0068912   Median :    55.0     Median :3.450  
 Mean   :0.39424      Mean   :0.0282780   Mean   :  2408.8     Mean   :3.783  
 3rd Qu.:0.54451      3rd Qu.:0.0233323   3rd Qu.:    96.5     3rd Qu.:4.710  
 Max.   :0.85955      Max.   :0.9124486   Max.   :230025.0     Max.   :6.740  
 NA's   :1                                                                    
 Inst.sen.author Cit.1st.author    Cit.sen.author    Cit.impact    
 Min.   :1.280   Min.   :   54.0   Min.   :  240   Min.   :  6.00  
 1st Qu.:2.690   1st Qu.:  624.5   1st Qu.: 3734   1st Qu.: 35.50  
 Median :3.650   Median : 1539.0   Median : 8475   Median : 56.00  
 Mean   :3.971   Mean   : 3073.9   Mean   :13656   Mean   : 84.91  
 3rd Qu.:5.175   3rd Qu.: 3820.5   3rd Qu.:16130   3rd Qu.:123.00  
 Max.   :6.740   Max.   :44032.0   Max.   :86172   Max.   :341.00  
                                                                   
  concep.repl        dir.repl          expe.req     oppo.expec.bias
 Min.   :0.0000   Min.   :0.00000   Min.   :1.000   Min.   :1.000  
 1st Qu.:0.0000   1st Qu.:0.00000   1st Qu.:1.000   1st Qu.:1.000  
 Median :0.0000   Median :0.00000   Median :2.000   Median :2.000  
 Mean   :0.9091   Mean   :0.06061   Mean   :2.253   Mean   :1.737  
 3rd Qu.:2.0000   3rd Qu.:0.00000   3rd Qu.:3.000   3rd Qu.:2.000  
 Max.   :5.0000   Max.   :3.00000   Max.   :5.000   Max.   :4.000  
                                                                   
   oppo.dili        surp.res        exci.res    
 Min.   :1.000   Min.   :1.330   Min.   :1.000  
 1st Qu.:2.000   1st Qu.:2.500   1st Qu.:3.000  
 Median :2.000   Median :3.000   Median :3.280  
 Mean   :2.212   Mean   :3.074   Mean   :3.361  
 3rd Qu.:2.500   3rd Qu.:3.670   3rd Qu.:3.775  
 Max.   :5.000   Max.   :5.330   Max.   :5.330  
                                                
> round(apply(dat, 2, sd, na.rm = TRUE), 4) # Standard deviations
Original.effect.size      Original.pvalue Original.sample.size 
              0.2158               0.1309           22994.0344 
     Inst.1st.author      Inst.sen.author       Cit.1st.author 
              1.4895               1.5372            5340.9802 
      Cit.sen.author           Cit.impact          concep.repl 
          17219.6817              72.9489               1.2138 
            dir.repl             expe.req      oppo.expec.bias 
              0.3230               1.2046               0.8045 
           oppo.dili             surp.res             exci.res 
              1.0199               0.8742               0.7115 
                 sub 
              0.3174 
> 
> ### Variables in the columns
> rows <- cbind(MASTER$T_r..O., MASTER$T_pval_USE..O., MASTER$T_N..O., MASTER$Institution.prestige..1st.author..O., MASTER$Institution.prestige..senior.author..O.,
+               MASTER$Citation.Count..1st.author..O., MASTER$Citation.count..senior.author..O., MASTER$Citation.count..paper..O., MASTER$Internal.conceptual.replications..O.,
+               MASTER$Internal.direct.replications..O., as.numeric(fac.expe), as.numeric(fac.oppo.expe), as.numeric(fac.oppo.dili), 
+               as.numeric(levels(MASTER$Surprising.result..O.))[MASTER$Surprising.result..O.], as.numeric(levels(MASTER$Exciting.result..O.))[MASTER$Exciting.result..O.], MASTER$T_pval_USE..R.)
Warning messages:
1: In cbind(MASTER$T_r..O., MASTER$T_pval_USE..O., MASTER$T_N..O.,  :
  NAs introduced by coercion
2: In cbind(MASTER$T_r..O., MASTER$T_pval_USE..O., MASTER$T_N..O.,  :
  NAs introduced by coercion
> 
> colnames(rows) <- c("Original.effect.size", "Original.pvalue", "Original.sample.size", "Inst.1st.author", "Inst.sen.author", "Cit.1st.author", "Cit.sen.author",
+                     "Cit.impact", "concep.repl", "dir.repl", "expe.req", "oppo.expec.bias", "oppo.dili", "surp.res", "exci.res", "sub") 
> 
> ### "Replications p < 0.05 in original direction (all signicant replication studies are in the same direction as the original study)"
> mat <- cbind(rep.dir, rows)
> colnames(mat) <- c("rep.dir", "Original.effect.size", "Original.pvalue", "Original.sample.size", "Inst.1st.author", "Inst.sen.author", "Cit.1st.author", "Cit.sen.author",
+                    "Cit.impact", "concep.repl", "dir.repl", "expe.req", "oppo.expec.bias", "oppo.dili", "surp.res", "exci.res", "sub") 
> 
> sub <- subset(mat, is.na(mat[ , "sub"]) == FALSE, select = -ncol(mat)) # Select only the replicated studies
> 
> round(rcorr(sub, type = "spearman")$r[-1,1], 3) # Create table with correlations and select the appropriate rows
Original.effect.size      Original.pvalue Original.sample.size 
               0.304               -0.327               -0.187 
     Inst.1st.author      Inst.sen.author       Cit.1st.author 
              -0.026               -0.057                0.117 
      Cit.sen.author           Cit.impact          concep.repl 
              -0.093               -0.013               -0.164 
            dir.repl             expe.req      oppo.expec.bias 
               0.061               -0.114               -0.214 
           oppo.dili             surp.res             exci.res 
              -0.194               -0.244               -0.104 
> 
> ### "Effect size difference" (Fisher z)
> mat <- cbind(es.dif, rows)
> colnames(mat) <- c("es.dif", "Original.effect.size", "Original.pvalue", "Original.sample.size", "Inst.1st.author", "Inst.sen.author", "Cit.1st.author", "Cit.sen.author",
+                    "Cit.impact", "concep.repl", "dir.repl", "expe.req", "oppo.expec.bias", "oppo.dili", "surp.res", "exci.res", "sub") 
> 
> sub <- subset(mat, is.na(mat[ , "sub"]) == FALSE, select = -ncol(mat)) # Select only the replicated studies
> 
> round(rcorr(sub, type = "spearman")$r[-1,1], 3) # Create table with correlations and select the appropriate rows
Original.effect.size      Original.pvalue Original.sample.size 
               0.279               -0.057               -0.090 
     Inst.1st.author      Inst.sen.author       Cit.1st.author 
               0.012               -0.062               -0.111 
      Cit.sen.author           Cit.impact          concep.repl 
              -0.060               -0.059                0.036 
            dir.repl             expe.req      oppo.expec.bias 
               0.023                0.042                0.117 
           oppo.dili             surp.res             exci.res 
               0.086                0.102                0.103 
> 
> ### "Meta-analytic estimate" (Fisher z)
> mat <- cbind(es.meta.all, rows)
> colnames(mat) <- c("Meta-analytic estimate", "Original.effect.size", "Original.pvalue", "Original.sample.size", "Inst.1st.author", "Inst.sen.author", "Cit.1st.author", "Cit.sen.author",
+                    "Cit.impact", "concep.repl", "dir.repl", "expe.req", "oppo.expec.bias", "oppo.dili", "surp.res", "exci.res", "sub") 
> 
> sub <- subset(mat, is.na(mat[ , "sub"]) == FALSE, select = -ncol(mat)) # Select only the replicated studies
> 
> round(rcorr(sub, type = "spearman")$r[-1,1], 3) # Create table with correlations and select the appropriate rows
Original.effect.size      Original.pvalue Original.sample.size 
                  NA                   NA                   NA 
     Inst.1st.author      Inst.sen.author       Cit.1st.author 
                  NA                   NA                   NA 
      Cit.sen.author           Cit.impact          concep.repl 
                  NA                   NA                   NA 
            dir.repl             expe.req      oppo.expec.bias 
                  NA                   NA                   NA 
           oppo.dili             surp.res             exci.res 
                  NA                   NA                   NA 
Warning message:
In sqrt(npair - 2) : NaNs produced
> 
> ### "original effect size within replication 95% CI"
> mat <- cbind(in.ci, rows)
> colnames(mat) <- c("Original in CI", "Original.effect.size", "Original.pvalue", "Original.sample.size", "Inst.1st.author", "Inst.sen.author", "Cit.1st.author", "Cit.sen.author",
+                    "Cit.impact", "concep.repl", "dir.repl", "expe.req", "oppo.expec.bias", "oppo.dili", "surp.res", "exci.res", "sub") 
> 
> sub <- subset(mat, is.na(mat[ , "sub"]) == FALSE, select = -ncol(mat)) # Select only the replicated studies
> 
> round(rcorr(sub, type = "spearman")$r[-1,1], 3) # Create table with correlations and select the appropriate rows
Original.effect.size      Original.pvalue Original.sample.size 
               0.121                0.032               -0.226 
     Inst.1st.author      Inst.sen.author       Cit.1st.author 
              -0.132               -0.104                0.004 
      Cit.sen.author           Cit.impact          concep.repl 
              -0.054               -0.081               -0.058 
            dir.repl             expe.req      oppo.expec.bias 
               0.116               -0.077               -0.109 
           oppo.dili             surp.res             exci.res 
              -0.037               -0.113               -0.098 
> 
> ### "subjective 'yes' to 'Did it replicate?'"
> mat <- cbind(replic, rows)
> colnames(mat) <- c("Did it replicate?", "Original.effect.size", "Original.pvalue", "Original.sample.size", "Inst.1st.author", "Inst.sen.author", "Cit.1st.author", "Cit.sen.author",
+                    "Cit.impact", "concep.repl", "dir.repl", "expe.req", "oppo.expec.bias", "oppo.dili", "surp.res", "exci.res", "sub") 
> 
> sub <- subset(mat, is.na(mat[ , "sub"]) == FALSE, select = -ncol(mat)) # Select only the replicated studies
> 
> round(rcorr(sub, type = "spearman")$r[-1,1], 3) # Create table with correlations and select the appropriate rows
Original.effect.size      Original.pvalue Original.sample.size 
               0.277               -0.260               -0.214 
     Inst.1st.author      Inst.sen.author       Cit.1st.author 
              -0.002               -0.019                0.117 
      Cit.sen.author           Cit.impact          concep.repl 
              -0.092                0.016               -0.191 
            dir.repl             expe.req      oppo.expec.bias 
               0.047               -0.044               -0.172 
           oppo.dili             surp.res             exci.res 
              -0.149               -0.241               -0.085 
> 
> ##########################
> ##### TABLE S5 BRIAN #####
> ##########################
> 
> ### Create data frame
> dat <- data.frame(Inst.1st.author = MASTER$Institution.prestige..1st.author..R., Inst.senior.author = MASTER$Institution.prestige..senior.author..R., 
+                   Cit.1st.author = MASTER$Citation.count..1st.author..R., Cit.senior.author = MASTER$Citation.count..senior.author..R., position = as.numeric(fac.posi),
+                   degree = as.numeric(fac.degr), total.publ = MASTER$Total.publications..R., domain = as.numeric(fac.doma), method = as.numeric(fac.meth),
+                   imple = as.numeric(fac.impl), data.coll = as.numeric(fac.data), repl.sim = as.numeric(fac.repl), diff.impl = as.numeric(fac.diff),
+                   repl.N = MASTER$T_N_R_for_tables, power.R = as.numeric(levels(MASTER$Power..R.))[MASTER$Power..R.], sur.out = as.numeric(fac.sur.out), sub = MASTER$T_pval_USE..R.)
Warning message:
In data.frame(Inst.1st.author = MASTER$Institution.prestige..1st.author..R.,  :
  NAs introduced by coercion
> 
> sub <- subset(dat, is.na(dat$sub) == FALSE, select = -ncol(mat)) # Select only the replicated studies
> 
> ### Descriptives
> summary(sub) 
 Inst.1st.author Inst.senior.author Cit.1st.author   Cit.senior.author
 Min.   :1.310   Min.   :1.310      Min.   :   0.0   Min.   :    0    
 1st Qu.:1.945   1st Qu.:1.945      1st Qu.:   2.5   1st Qu.:   31    
 Median :2.530   Median :2.610      Median :  91.0   Median :  377    
 Mean   :3.044   Mean   :3.032      Mean   : 570.2   Mean   : 1443    
 3rd Qu.:4.000   3rd Qu.:3.820      3rd Qu.: 474.0   3rd Qu.: 1318    
 Max.   :6.740   Max.   :6.740      Max.   :6853.0   Max.   :15770    
                                                                      
    position         degree        total.publ         domain     
 Min.   :1.000   Min.   :1.000   Min.   :  0.00   Min.   :1.000  
 1st Qu.:1.000   1st Qu.:1.000   1st Qu.:  7.00   1st Qu.:2.000  
 Median :2.000   Median :1.000   Median : 18.00   Median :3.000  
 Mean   :2.909   Mean   :1.242   Mean   : 44.81   Mean   :3.222  
 3rd Qu.:4.500   3rd Qu.:1.000   3rd Qu.: 45.00   3rd Qu.:4.000  
 Max.   :7.000   Max.   :4.000   Max.   :400.00   Max.   :5.000  
                                                                 
     method          imple         data.coll        repl.sim    
 Min.   :1.000   Min.   :1.000   Min.   :1.000   Min.   :3.000  
 1st Qu.:3.000   1st Qu.:4.000   1st Qu.:3.000   1st Qu.:5.000  
 Median :3.000   Median :4.000   Median :4.000   Median :6.000  
 Mean   :3.429   Mean   :3.848   Mean   :3.596   Mean   :5.717  
 3rd Qu.:4.000   3rd Qu.:4.000   3rd Qu.:4.000   3rd Qu.:6.000  
 Max.   :5.000   Max.   :6.000   Max.   :6.000   Max.   :7.000  
 NA's   :1                                                      
   diff.impl         repl.N            power.R          sur.out     
 Min.   :1.000   Min.   :     7.0   Min.   :0.5600   Min.   :1.000  
 1st Qu.:3.000   1st Qu.:    32.2   1st Qu.:0.8975   1st Qu.:2.000  
 Median :4.000   Median :    68.5   Median :0.9500   Median :2.000  
 Mean   :4.061   Mean   :  4804.1   Mean   :0.9209   Mean   :2.505  
 3rd Qu.:5.000   3rd Qu.:   150.0   3rd Qu.:0.9900   3rd Qu.:3.000  
 Max.   :6.000   Max.   :455304.0   Max.   :0.9900   Max.   :5.000  
                 NA's   :1          NA's   :3                       
> apply(dat, 2, sd, na.rm = TRUE) # Standard deviations
   Inst.1st.author Inst.senior.author     Cit.1st.author  Cit.senior.author 
      1.423571e+00       1.399015e+00       1.280357e+03       2.573459e+03 
          position             degree         total.publ             domain 
      1.887415e+00       6.231302e-01       6.900754e+01       1.071422e+00 
            method              imple          data.coll           repl.sim 
      1.079458e+00       8.587586e-01       9.961464e-01       1.053513e+00 
         diff.impl             repl.N            power.R            sur.out 
      1.440774e+00       4.574536e+04       8.630953e-02       1.073534e+00 
               sub 
      3.173970e-01 
> 
> ### Variables in the columns
> rows <- cbind(MASTER$Institution.prestige..1st.author..R., MASTER$Institution.prestige..senior.author..R., MASTER$Citation.count..1st.author..R., MASTER$Citation.count..senior.author..R., 
+               as.numeric(fac.posi), as.numeric(fac.degr), MASTER$Total.publications..R., as.numeric(fac.doma), as.numeric(fac.meth), as.numeric(fac.impl), as.numeric(fac.data), 
+               as.numeric(fac.repl), as.numeric(fac.diff), MASTER$T_N_R_for_tables, as.numeric(levels(MASTER$Power..R.))[MASTER$Power..R.], as.numeric(fac.sur.out), MASTER$T_pval_USE..R.)
Warning message:
In cbind(MASTER$Institution.prestige..1st.author..R., MASTER$Institution.prestige..senior.author..R.,  :
  NAs introduced by coercion
> colnames(rows) <- c("Inst.1st.author", "Inst.senior.author", "Cit.1st.author", "Cit.senior.author", "position", "degree", "total.publ", "domain", "method", "imple", "data.coll", 
+                     "repl.sim", "diff.impl", "repl.N", "power.R", "sur.out", "sub")
> 
> ### "Replications p < 0.05 in original direction (all signicant replication studies are in the same direction as the original study)"
> mat <- cbind(rep.dir, rows)
> colnames(mat) <- c("rep.dir", "Inst.1st.author", "Inst.senior.author", "Cit.1st.author", "Cit.senior.author", "position", "degree", "total.publ", "domain", "method", "imple", "data.coll", 
+                    "repl.sim", "diff.impl", "repl.N", "power.R", "sur.out", "sub")
> 
> sub <- subset(mat, is.na(mat[ , "sub"]) == FALSE, select = -ncol(mat)) # Select only the replicated studies
> 
> rcorr(sub, type = "spearman")$r[-1,1] # Create table with correlations and select the appropriate rows
   Inst.1st.author Inst.senior.author     Cit.1st.author  Cit.senior.author 
       -0.22413461        -0.23122118         0.06439685        -0.07791339 
          position             degree         total.publ             domain 
       -0.15707536        -0.03425248        -0.02123330         0.04159164 
            method              imple          data.coll           repl.sim 
       -0.05728092        -0.05758442        -0.10251344         0.01527103 
         diff.impl             repl.N            power.R            sur.out 
       -0.07181653        -0.08488403         0.36783454        -0.46777108 
> 
> ### "Effect size difference" (Fisher z)
> mat <- cbind(es.dif, rows)
> colnames(mat) <- c("es.dif", "Inst.1st.author", "Inst.senior.author", "Cit.1st.author", "Cit.senior.author", "position", "degree", "total.publ", "domain", "method", "imple", "data.coll", 
+                    "repl.sim", "diff.impl", "repl.N", "power.R", "sur.out", "sub")
> 
> sub <- subset(mat, is.na(mat[ , "sub"]) == FALSE, select = -ncol(mat)) # Select only the replicated studies
> 
> rcorr(sub, type = "spearman")$r[-1,1] # Create table with correlations and select the appropriate rows
   Inst.1st.author Inst.senior.author     Cit.1st.author  Cit.senior.author 
       0.113749862        0.092497885       -0.113800779        0.103889093 
          position             degree         total.publ             domain 
       0.086726680       -0.028776327        0.078504391        0.022342017 
            method              imple          data.coll           repl.sim 
       0.151288867        0.093278147        0.037760340       -0.075132042 
         diff.impl             repl.N            power.R            sur.out 
       0.000269604       -0.223526314       -0.052958000        0.344105184 
> 
> ### "Meta-analytic estimate" (Fisher z)
> mat <- cbind(es.meta.all, rows)
> colnames(mat) <- c("es.meta.all", "Inst.1st.author", "Inst.senior.author", "Cit.1st.author", "Cit.senior.author", "position", "degree", "total.publ", "domain", "method", "imple", "data.coll", 
+                    "repl.sim", "diff.impl", "repl.N", "power.R", "sur.out", "sub")
> 
> sub <- subset(mat, is.na(mat[ , "sub"]) == FALSE, select = -ncol(mat)) # Select only the replicated studies
> 
> rcorr(sub, type = "spearman")$r[-1,1] # Create table with correlations and select the appropriate rows
   Inst.1st.author Inst.senior.author     Cit.1st.author  Cit.senior.author 
                NA                 NA                 NA                 NA 
          position             degree         total.publ             domain 
                NA                 NA                 NA                 NA 
            method              imple          data.coll           repl.sim 
                NA                 NA                 NA                 NA 
         diff.impl             repl.N            power.R            sur.out 
                NA                 NA                 NA                 NA 
Warning message:
In sqrt(npair - 2) : NaNs produced
> 
> ### "original effect size within replication 95% CI"
> mat <- cbind(in.ci, rows)
> colnames(mat) <- c("Original in CI", "Inst.1st.author", "Inst.senior.author", "Cit.1st.author", "Cit.senior.author", "position", "degree", "total.publ", "domain", "method", "imple", "data.coll", 
+                    "repl.sim", "diff.impl", "repl.N", "power.R", "sur.out", "sub")
> 
> sub <- subset(mat, is.na(mat[ , "sub"]) == FALSE, select = -ncol(mat)) # Select only the replicated studies
> 
> rcorr(sub, type = "spearman")$r[-1,1] # Create table with correlations and select the appropriate rows
   Inst.1st.author Inst.senior.author     Cit.1st.author  Cit.senior.author 
      -0.266923845       -0.307033598        0.219745100        0.037757441 
          position             degree         total.publ             domain 
      -0.194902450       -0.154957443        0.054244515        0.180243924 
            method              imple          data.coll           repl.sim 
       0.008544956        0.042931363        0.025760802       -0.035563778 
         diff.impl             repl.N            power.R            sur.out 
      -0.115961432       -0.257348597       -0.056290347       -0.362243623 
> 
> ### "subjective 'yes' to 'Did it replicate?'"
> mat <- cbind(replic, rows)
> colnames(mat) <- c("Did it replicate?", "Inst.1st.author", "Inst.senior.author", "Cit.1st.author", "Cit.senior.author", "position", "degree", "total.publ", "domain", "method", "imple", "data.coll", 
+                    "repl.sim", "diff.impl", "repl.N", "power.R", "sur.out", "sub")
> 
> sub <- subset(mat, is.na(mat[ , "sub"]) == FALSE, select = -ncol(mat)) # Select only the replicated studies
> 
> rcorr(sub, type = "spearman")$r[-1,1] # Create table with correlations and select the appropriate rows
   Inst.1st.author Inst.senior.author     Cit.1st.author  Cit.senior.author 
      -0.242919087       -0.248745978        0.057695895       -0.066582836 
          position             degree         total.publ             domain 
      -0.158629626       -0.024991889       -0.003999595        0.100942031 
            method              imple          data.coll           repl.sim 
      -0.026462587       -0.022909798       -0.106142357        0.043855395 
         diff.impl             repl.N            power.R            sur.out 
      -0.073064193       -0.164362669        0.285099655       -0.498075664 
> 
